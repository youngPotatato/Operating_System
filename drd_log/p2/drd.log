25.04.2018 19:28:16 --------------------DRD settings:----------------------
logging_level = INFO
races_grouping = CALL_CLASS_AND_METHOD
report_races_on_foreign_calls = true
debugTransformMode = APPLICATION
data_clock_histogram_size = 20
internal_profiling_enabled = true
internal_metrics = FULL
-------------------------------------------------------
25.04.2018 19:28:16 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as file ...
25.04.2018 19:28:16 D:\work_study\courses\OS\DRD-0.7.1\config.xml (系统找不到指定的文件。)
25.04.2018 19:28:16 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as resource ...
25.04.2018 19:28:17 
Sync instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Race detection instrumentation scope config : ScopeConfig with default policy 'exclude all' and no special rules.

Accesses config:

Accesses of following fields wouldn't be instrumented : 
Any name if owner matches 'com/devexperts/util/.*'. 
OR
Any owner if name matches 'log|logger'. 
OR
Owner matches 'com/devexperts/app/ABC.*' and name matches 'my_field'.

Foreign calls of following methods wouldn't be instrumented : 
Any name if owner matches 'java/lang/Integer.*|java/lang/Boolean.*|com/google/common/base/Preconditions.*|java/lang/Float.*|java/util/concurrent/.*|java/io/PrintStream.*|java/lang/String.*|java/lang/Character.*|java/util/regex/Pattern.*|java/util/Properties.*|java/util/Arrays.*|com/google/common/collect/ImmutableList.*|com/thoughtworks/xstream/.*|java/lang/Thread.*|java/security/AccessController.*|java/lang/Math.*|java/util/EnumSet.*|javax/net/SocketFactory.*|org/zk.*|java/lang/Runtime.*|java/lang/Byte.*|java/lang/reflect.*|java/lang/Long.*|java/lang/Enum.*|org/apache/log4j/Logger.*|javax/swing/SwingUtilities.*|sun/misc/Unsafe.*|java/util/logging/.*|org/jdesktop.*|java/lang/Double.*|java/lang/System.*'. 
OR
Owner matches 'java/lang/Class.*' and name matches 'forName'. 
OR
Owner matches 'java/util/Calendar.*' and name matches 'getInstance'.

25.04.2018 19:28:17 
Contracts config:

Contracts matcher would try to apply following contracts sequentially. If no one matches, target method would be treated as write.
Contract{ class: java/util/Map.*, read: keySet|values|entrySet, write: null, raceDetectionMode: ALL}
Contract{ class: java/util/List.*, read: listIterator, write: null, raceDetectionMode: ALL}
Contract{ class: .*, read: get.*|toString|hashCode|equals|is.*|contains.*|iter.*|has.*|size, write: null, raceDetectionMode: ALL}

25.04.2018 19:28:17 Trace config: 
{com/devexperts/MyManagerImpl={myField= trackThreadAccess for any caller}}
*: {com/library/SomeClass= trackThreadAccess for any caller, java/util/List= printDataOperations for caller, matching pattern 'com/devexperts/jtt/tracker/gui/SystemTrayHelper.*'}

25.04.2018 19:28:17 Config initialized : true.
25.04.2018 19:28:17 Transformer and detector launched.
25.04.2018 19:28:17 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as file ...
25.04.2018 19:28:17 D:\work_study\courses\OS\DRD-0.7.1\hb-config.xml (系统找不到指定的文件。)
25.04.2018 19:28:17 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as resource ...
25.04.2018 19:28:17 
Happens-before config read successfully. Happens-before contracts are: 

HBContract{id=0, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='put', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=0, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=1, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=1, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='unlock', descriptor='()V', hbContractId=1, id=2, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='lock', descriptor='()V', hbContractId=1, id=3, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=2, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/Executor', name='execute', descriptor='(Ljava/lang/Runnable;)V', hbContractId=2, id=4, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/lang/Runnable', name='run', descriptor='()V', hbContractId=2, id=5, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=3, vertices=[HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapObject', descriptor='(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=3, id=6, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapLong', descriptor='(Ljava/lang/Object;JJJ)Z', hbContractId=3, id=7, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapInt', descriptor='(Ljava/lang/Object;JII)Z', hbContractId=3, id=8, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getObjectVolatile', descriptor='(Ljava/lang/Object;J)Ljava/lang/Object;', hbContractId=3, id=9, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putObjectVolatile', descriptor='(Ljava/lang/Object;JLjava/lang/Object;)V', hbContractId=3, id=10, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getIntVolatile', descriptor='(Ljava/lang/Object;J)I', hbContractId=3, id=11, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putIntVolatile', descriptor='(Ljava/lang/Object;JI)V', hbContractId=3, id=12, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getBooleanVolatile', descriptor='(Ljava/lang/Object;J)Z', hbContractId=3, id=13, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putBooleanVolatile', descriptor='(Ljava/lang/Object;JZ)V', hbContractId=3, id=14, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getByteVolatile', descriptor='(Ljava/lang/Object;J)B', hbContractId=3, id=15, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putByteVolatile', descriptor='(Ljava/lang/Object;JB)V', hbContractId=3, id=16, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getShortVolatile', descriptor='(Ljava/lang/Object;J)S', hbContractId=3, id=17, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putShortVolatile', descriptor='(Ljava/lang/Object;JS)V', hbContractId=3, id=18, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getCharVolatile', descriptor='(Ljava/lang/Object;J)C', hbContractId=3, id=19, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putCharVolatile', descriptor='(Ljava/lang/Object;JC)V', hbContractId=3, id=20, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getLongVolatile', descriptor='(Ljava/lang/Object;J)J', hbContractId=3, id=21, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putLongVolatile', descriptor='(Ljava/lang/Object;JJ)V', hbContractId=3, id=22, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getFloatVolatile', descriptor='(Ljava/lang/Object;J)F', hbContractId=3, id=23, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putFloatVolatile', descriptor='(Ljava/lang/Object;JF)V', hbContractId=3, id=24, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getDoubleVolatile', descriptor='(Ljava/lang/Object;J)D', hbContractId=3, id=25, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putDoubleVolatile', descriptor='(Ljava/lang/Object;JD)V', hbContractId=3, id=26, type=SEND, shouldReturnTrue=false}]}
HBContract{id=4, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquire', descriptor='(I)Z', hbContractId=4, id=27, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryRelease', descriptor='(I)Z', hbContractId=4, id=28, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireShared', descriptor='(I)Z', hbContractId=4, id=29, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryReleaseShared', descriptor='(I)Z', hbContractId=4, id=30, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquire', descriptor='(I)V', hbContractId=4, id=31, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireInterruptibly', descriptor='(I)V', hbContractId=4, id=32, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireNanos', descriptor='(IJ)Z', hbContractId=4, id=33, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='release', descriptor='(I)Z', hbContractId=4, id=34, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireShared', descriptor='(I)V', hbContractId=4, id=35, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireSharedInterruptibly', descriptor='(I)V', hbContractId=4, id=36, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireSharedNanos', descriptor='(IJ)Z', hbContractId=4, id=37, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='releaseShared', descriptor='(I)Z', hbContractId=4, id=38, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='setState', descriptor='(I)V', hbContractId=4, id=39, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='getState', descriptor='()I', hbContractId=4, id=40, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='compareAndSetState', descriptor='(II)Z', hbContractId=4, id=41, type=FULL, shouldReturnTrue=true}]}
HBContract{id=5, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='get', descriptor='()I', hbContractId=5, id=42, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='set', descriptor='(I)V', hbContractId=5, id=43, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndSet', descriptor='(I)I', hbContractId=5, id=44, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='compareAndSet', descriptor='(II)Z', hbContractId=5, id=45, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndIncrement', descriptor='()I', hbContractId=5, id=46, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndDecrement', descriptor='()I', hbContractId=5, id=47, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndAdd', descriptor='(I)I', hbContractId=5, id=48, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='incrementAndGet', descriptor='()I', hbContractId=5, id=49, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='decrementAndGet', descriptor='()I', hbContractId=5, id=50, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='addAndGet', descriptor='(I)I', hbContractId=5, id=51, type=FULL, shouldReturnTrue=false}]}
HBContract{id=6, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='get', descriptor='()J', hbContractId=6, id=52, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='set', descriptor='(J)V', hbContractId=6, id=53, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndSet', descriptor='(J)J', hbContractId=6, id=54, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='compareAndSet', descriptor='(JJ)Z', hbContractId=6, id=55, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndIncrement', descriptor='()J', hbContractId=6, id=56, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndDecrement', descriptor='()J', hbContractId=6, id=57, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndAdd', descriptor='(J)J', hbContractId=6, id=58, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='incrementAndGet', descriptor='()J', hbContractId=6, id=59, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='decrementAndGet', descriptor='()J', hbContractId=6, id=60, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='addAndGet', descriptor='(J)J', hbContractId=6, id=61, type=FULL, shouldReturnTrue=false}]}
HBContract{id=7, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='get', descriptor='()Z', hbContractId=7, id=62, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='compareAndSet', descriptor='(ZZ)Z', hbContractId=7, id=63, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='set', descriptor='(Z)V', hbContractId=7, id=64, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='getAndSet', descriptor='(Z)Z', hbContractId=7, id=65, type=FULL, shouldReturnTrue=false}]}
HBContract{id=8, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z', hbContractId=8, id=66, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='set', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)V', hbContractId=8, id=67, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=68, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=69, type=FULL, shouldReturnTrue=false}]}
HBContract{id=9, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;II)Z', hbContractId=9, id=70, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='set', descriptor='(Ljava/lang/Object;I)V', hbContractId=9, id=71, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=72, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=73, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=74, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=75, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=76, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=77, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=78, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=79, type=FULL, shouldReturnTrue=false}]}
HBContract{id=10, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;JJ)Z', hbContractId=10, id=80, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='set', descriptor='(Ljava/lang/Object;J)V', hbContractId=10, id=81, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=82, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=83, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=84, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=85, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=86, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=87, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=88, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=89, type=FULL, shouldReturnTrue=false}]}
HBContract{id=11, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='get', descriptor='(I)I', hbContractId=11, id=90, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='set', descriptor='(II)V', hbContractId=11, id=91, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndSet', descriptor='(II)I', hbContractId=11, id=92, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='compareAndSet', descriptor='(III)Z', hbContractId=11, id=93, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndIncrement', descriptor='(I)I', hbContractId=11, id=94, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndDecrement', descriptor='(I)I', hbContractId=11, id=95, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndAdd', descriptor='(II)I', hbContractId=11, id=96, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='incrementAndGet', descriptor='(I)I', hbContractId=11, id=97, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='decrementAndGet', descriptor='(I)I', hbContractId=11, id=98, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='addAndGet', descriptor='(II)I', hbContractId=11, id=99, type=FULL, shouldReturnTrue=false}]}
HBContract{id=12, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='get', descriptor='(I)J', hbContractId=12, id=100, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='set', descriptor='(IJ)V', hbContractId=12, id=101, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndSet', descriptor='(IJ)J', hbContractId=12, id=102, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='compareAndSet', descriptor='(IJJ)Z', hbContractId=12, id=103, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndIncrement', descriptor='(I)J', hbContractId=12, id=104, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndDecrement', descriptor='(I)J', hbContractId=12, id=105, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndAdd', descriptor='(IJ)J', hbContractId=12, id=106, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='incrementAndGet', descriptor='(I)J', hbContractId=12, id=107, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='decrementAndGet', descriptor='(I)J', hbContractId=12, id=108, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='addAndGet', descriptor='(IJ)J', hbContractId=12, id=109, type=FULL, shouldReturnTrue=false}]}
HBContract{id=13, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=13, id=110, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='set', descriptor='(ILjava/lang/Object;)V', hbContractId=13, id=111, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='getAndSet', descriptor='(ILjava/lang/Object;)Ljava/lang/Object;', hbContractId=13, id=112, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='compareAndSet', descriptor='(ILjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=13, id=113, type=FULL, shouldReturnTrue=true}]}
HBContract{id=14, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=114, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='offer', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=115, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='put', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=116, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='take', descriptor='()Ljava/lang/Object;', hbContractId=14, id=117, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='poll', descriptor='()Ljava/lang/Object;', hbContractId=14, id=118, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=15, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=119, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(ILjava/lang/Object;)V', hbContractId=15, id=120, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=121, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=122, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=123, type=RECEIVE, shouldReturnTrue=false}]}

25.04.2018 19:28:17 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor3 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor3
25.04.2018 19:28:17 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor2 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor2
25.04.2018 19:28:17 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor1 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor1
25.04.2018 19:28:17 System transformer couldn't detect if com/sun/proxy/$Proxy4 is a class loader: Cannot load class information for com.sun.proxy.$Proxy4
25.04.2018 19:28:18 System transformer couldn't detect if com/sun/proxy/$Proxy3 is a class loader: Cannot load class information for com.sun.proxy.$Proxy3
25.04.2018 19:28:18 System transformer couldn't detect if com/sun/proxy/$Proxy2 is a class loader: Cannot load class information for com.sun.proxy.$Proxy2
25.04.2018 19:28:18 System transformer couldn't detect if com/sun/proxy/$Proxy1 is a class loader: Cannot load class information for com.sun.proxy.$Proxy1
25.04.2018 19:28:22 System transformer couldn't detect if com/sun/proxy/$Proxy0 is a class loader: Cannot load class information for com.sun.proxy.$Proxy0
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample <---> Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample <---> Ljava/util/concurrent/locks/Lock;
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample <---> Ljava/lang/Runnable;
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample <---> Ljava/lang/Object;J
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample <---> Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample <---> Ljava/util/concurrent/atomic/AtomicInteger;
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample <---> Ljava/util/concurrent/atomic/AtomicLong;
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample <---> Ljava/util/concurrent/atomic/AtomicBoolean;
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample <---> Ljava/lang/Object;
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample <---> Ljava/util/concurrent/atomic/AtomicIntegerArray;I
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample <---> Ljava/util/concurrent/atomic/AtomicLongArray;I
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample <---> Ljava/util/concurrent/atomic/AtomicReferenceArray;I
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample <---> Ljava/util/concurrent/BlockingQueue;
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample <---> Ljava/util/concurrent/CopyOnWriteArrayList;
25.04.2018 19:28:23 14 composite keys generated.
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:23 14 samples generated
25.04.2018 19:28:23 sun.misc.Unsafe reference obtained!
25.04.2018 19:28:23 GuardedInterceptor initialized true
25.04.2018 19:28:23 1 more DRD thread : 7
25.04.2018 19:28:24 Match: sun.misc.Unsafe.getObjectVolatile <--> vertex9
25.04.2018 19:28:24 Post-retransformation done. Skipped:
drdjava.util: 69
javax.xml: 9
java.sql: 3
sun.reflect: 78
java.util: 206
sun.management: 5
sun.net: 16
java.beans: 1
javax.security: 1
sun.nio: 29
java.nio: 26
java.net: 15
com.sun: 7
sun.instrument: 4
sun.text: 5
java.math: 3
com.devexperts: 241
sun.misc: 66
java.security: 24
sun.security: 15
sun.io: 1
sun.util: 68
java.awt: 5
java.lang: 174
java.text: 24
org.objectweb: 36
java.io: 59
com.thoughtworks: 233
org.xmlpull: 3
javax.swing: 1
------------------------------------------------------
25.04.2018 19:28:24 

=====================================================
DRD 0.7-SNAPSHOT.201609291623 started it's work
Java 1.8.0_144 from D:\APP\JAVA\jre
=====================================================

25.04.2018 19:28:24 Match: java.util.concurrent.atomic.AtomicBoolean.compareAndSet <--> vertex63
25.04.2018 19:28:25 Match: sun.misc.Unsafe.compareAndSwapInt <--> vertex8
25.04.2018 19:28:25 Match: sun.misc.Unsafe.compareAndSwapObject <--> vertex6
25.04.2018 19:28:25 Match: sun.misc.Unsafe.compareAndSwapLong <--> vertex7
25.04.2018 19:28:25 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
10 active threads.
Memory usage: init = 134217728(131072K) used = 16407872(16023K) committed = 124256256(121344K) max = 1881145344(1837056K).
Contract clocks: 12 ( + 12 - 0 = 12. Disposal took 26 ms).
	Hits : 30.
	Approx total reserved size: 240; real size : 18. Dead threads clocks size: 0.
Volatile clocks: 15 ( + 15 - 0 = 15. Disposal took 0 ms).
	Hits : 41.
	Approx total reserved size: 300; real size : 4. Dead threads clocks size: 0.
Syn clocks: 4 ( + 4 - 0 = 4). New clock for nothing : 0.
	Hits : 19.
	Approx total reserved size : 60; real size : 10. Dead threads clocks size : 0.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 60; real size : 10. Dead threads clocks size: 0

Vector clock counters: 
	New array allocations for live clocks: 0 vs 97 reusages.
	Dead clocks during merge: 0 cached, 97 same, 0 new.
	Generations update: 0 light, 0 hard (0 of them from zero).
	Vector clock merge: 0 optimized vs 83 full acquires; 6 optimized vs 14 full releases. 9 two-way merges. 
Diff was calculated 0 times.
	Shared reads in data clock occurred 0 times.
	VC total live resizes: 0, total dead resizes: 0.
	Yield counter : 0.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/0=0
sync_method_exit: 0/0=0
monitor_enter: 9/0=9
monitor_exit: 9/0=9
wait: 0/0=0
join: 0/0=0
volatile: 41/0=41
contract_sync: 127/1=128
field_ops: 0/233=233
foreign_ops: 0/6357=6357
races: 0/0=0

Field access counters
0 DETECT
232 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
0 IGNORE_FINAL
0 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 1066 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
--------------------Total: 0------------------------



Stats gathered in 89 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:28:34 --------------------DRD settings:----------------------
logging_level = INFO
races_grouping = CALL_CLASS_AND_METHOD
report_races_on_foreign_calls = true
debugTransformMode = APPLICATION
data_clock_histogram_size = 20
internal_profiling_enabled = true
internal_metrics = FULL
-------------------------------------------------------
25.04.2018 19:28:34 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as file ...
25.04.2018 19:28:34 D:\work_study\courses\OS\DRD-0.7.1\config.xml (系统找不到指定的文件。)
25.04.2018 19:28:34 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as resource ...
25.04.2018 19:28:34 
Sync instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Race detection instrumentation scope config : ScopeConfig with default policy 'exclude all' and no special rules.

Accesses config:

Accesses of following fields wouldn't be instrumented : 
Any name if owner matches 'com/devexperts/util/.*'. 
OR
Any owner if name matches 'log|logger'. 
OR
Owner matches 'com/devexperts/app/ABC.*' and name matches 'my_field'.

Foreign calls of following methods wouldn't be instrumented : 
Any name if owner matches 'java/lang/Integer.*|java/lang/Boolean.*|com/google/common/base/Preconditions.*|java/lang/Float.*|java/util/concurrent/.*|java/io/PrintStream.*|java/lang/String.*|java/lang/Character.*|java/util/regex/Pattern.*|java/util/Properties.*|java/util/Arrays.*|com/google/common/collect/ImmutableList.*|com/thoughtworks/xstream/.*|java/lang/Thread.*|java/security/AccessController.*|java/lang/Math.*|java/util/EnumSet.*|javax/net/SocketFactory.*|org/zk.*|java/lang/Runtime.*|java/lang/Byte.*|java/lang/reflect.*|java/lang/Long.*|java/lang/Enum.*|org/apache/log4j/Logger.*|javax/swing/SwingUtilities.*|sun/misc/Unsafe.*|java/util/logging/.*|org/jdesktop.*|java/lang/Double.*|java/lang/System.*'. 
OR
Owner matches 'java/lang/Class.*' and name matches 'forName'. 
OR
Owner matches 'java/util/Calendar.*' and name matches 'getInstance'.

25.04.2018 19:28:34 
Contracts config:

Contracts matcher would try to apply following contracts sequentially. If no one matches, target method would be treated as write.
Contract{ class: java/util/Map.*, read: keySet|values|entrySet, write: null, raceDetectionMode: ALL}
Contract{ class: java/util/List.*, read: listIterator, write: null, raceDetectionMode: ALL}
Contract{ class: .*, read: get.*|toString|hashCode|equals|is.*|contains.*|iter.*|has.*|size, write: null, raceDetectionMode: ALL}

25.04.2018 19:28:34 Trace config: 
{com/devexperts/MyManagerImpl={myField= trackThreadAccess for any caller}}
*: {com/library/SomeClass= trackThreadAccess for any caller, java/util/List= printDataOperations for caller, matching pattern 'com/devexperts/jtt/tracker/gui/SystemTrayHelper.*'}

25.04.2018 19:28:34 Config initialized : true.
25.04.2018 19:28:34 Transformer and detector launched.
25.04.2018 19:28:34 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as file ...
25.04.2018 19:28:34 D:\work_study\courses\OS\DRD-0.7.1\hb-config.xml (系统找不到指定的文件。)
25.04.2018 19:28:34 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as resource ...
25.04.2018 19:28:34 
Happens-before config read successfully. Happens-before contracts are: 

HBContract{id=0, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='put', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=0, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=1, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=1, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='unlock', descriptor='()V', hbContractId=1, id=2, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='lock', descriptor='()V', hbContractId=1, id=3, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=2, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/Executor', name='execute', descriptor='(Ljava/lang/Runnable;)V', hbContractId=2, id=4, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/lang/Runnable', name='run', descriptor='()V', hbContractId=2, id=5, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=3, vertices=[HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapObject', descriptor='(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=3, id=6, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapLong', descriptor='(Ljava/lang/Object;JJJ)Z', hbContractId=3, id=7, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapInt', descriptor='(Ljava/lang/Object;JII)Z', hbContractId=3, id=8, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getObjectVolatile', descriptor='(Ljava/lang/Object;J)Ljava/lang/Object;', hbContractId=3, id=9, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putObjectVolatile', descriptor='(Ljava/lang/Object;JLjava/lang/Object;)V', hbContractId=3, id=10, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getIntVolatile', descriptor='(Ljava/lang/Object;J)I', hbContractId=3, id=11, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putIntVolatile', descriptor='(Ljava/lang/Object;JI)V', hbContractId=3, id=12, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getBooleanVolatile', descriptor='(Ljava/lang/Object;J)Z', hbContractId=3, id=13, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putBooleanVolatile', descriptor='(Ljava/lang/Object;JZ)V', hbContractId=3, id=14, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getByteVolatile', descriptor='(Ljava/lang/Object;J)B', hbContractId=3, id=15, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putByteVolatile', descriptor='(Ljava/lang/Object;JB)V', hbContractId=3, id=16, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getShortVolatile', descriptor='(Ljava/lang/Object;J)S', hbContractId=3, id=17, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putShortVolatile', descriptor='(Ljava/lang/Object;JS)V', hbContractId=3, id=18, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getCharVolatile', descriptor='(Ljava/lang/Object;J)C', hbContractId=3, id=19, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putCharVolatile', descriptor='(Ljava/lang/Object;JC)V', hbContractId=3, id=20, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getLongVolatile', descriptor='(Ljava/lang/Object;J)J', hbContractId=3, id=21, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putLongVolatile', descriptor='(Ljava/lang/Object;JJ)V', hbContractId=3, id=22, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getFloatVolatile', descriptor='(Ljava/lang/Object;J)F', hbContractId=3, id=23, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putFloatVolatile', descriptor='(Ljava/lang/Object;JF)V', hbContractId=3, id=24, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getDoubleVolatile', descriptor='(Ljava/lang/Object;J)D', hbContractId=3, id=25, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putDoubleVolatile', descriptor='(Ljava/lang/Object;JD)V', hbContractId=3, id=26, type=SEND, shouldReturnTrue=false}]}
HBContract{id=4, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquire', descriptor='(I)Z', hbContractId=4, id=27, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryRelease', descriptor='(I)Z', hbContractId=4, id=28, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireShared', descriptor='(I)Z', hbContractId=4, id=29, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryReleaseShared', descriptor='(I)Z', hbContractId=4, id=30, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquire', descriptor='(I)V', hbContractId=4, id=31, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireInterruptibly', descriptor='(I)V', hbContractId=4, id=32, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireNanos', descriptor='(IJ)Z', hbContractId=4, id=33, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='release', descriptor='(I)Z', hbContractId=4, id=34, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireShared', descriptor='(I)V', hbContractId=4, id=35, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireSharedInterruptibly', descriptor='(I)V', hbContractId=4, id=36, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireSharedNanos', descriptor='(IJ)Z', hbContractId=4, id=37, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='releaseShared', descriptor='(I)Z', hbContractId=4, id=38, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='setState', descriptor='(I)V', hbContractId=4, id=39, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='getState', descriptor='()I', hbContractId=4, id=40, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='compareAndSetState', descriptor='(II)Z', hbContractId=4, id=41, type=FULL, shouldReturnTrue=true}]}
HBContract{id=5, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='get', descriptor='()I', hbContractId=5, id=42, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='set', descriptor='(I)V', hbContractId=5, id=43, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndSet', descriptor='(I)I', hbContractId=5, id=44, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='compareAndSet', descriptor='(II)Z', hbContractId=5, id=45, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndIncrement', descriptor='()I', hbContractId=5, id=46, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndDecrement', descriptor='()I', hbContractId=5, id=47, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndAdd', descriptor='(I)I', hbContractId=5, id=48, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='incrementAndGet', descriptor='()I', hbContractId=5, id=49, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='decrementAndGet', descriptor='()I', hbContractId=5, id=50, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='addAndGet', descriptor='(I)I', hbContractId=5, id=51, type=FULL, shouldReturnTrue=false}]}
HBContract{id=6, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='get', descriptor='()J', hbContractId=6, id=52, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='set', descriptor='(J)V', hbContractId=6, id=53, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndSet', descriptor='(J)J', hbContractId=6, id=54, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='compareAndSet', descriptor='(JJ)Z', hbContractId=6, id=55, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndIncrement', descriptor='()J', hbContractId=6, id=56, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndDecrement', descriptor='()J', hbContractId=6, id=57, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndAdd', descriptor='(J)J', hbContractId=6, id=58, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='incrementAndGet', descriptor='()J', hbContractId=6, id=59, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='decrementAndGet', descriptor='()J', hbContractId=6, id=60, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='addAndGet', descriptor='(J)J', hbContractId=6, id=61, type=FULL, shouldReturnTrue=false}]}
HBContract{id=7, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='get', descriptor='()Z', hbContractId=7, id=62, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='compareAndSet', descriptor='(ZZ)Z', hbContractId=7, id=63, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='set', descriptor='(Z)V', hbContractId=7, id=64, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='getAndSet', descriptor='(Z)Z', hbContractId=7, id=65, type=FULL, shouldReturnTrue=false}]}
HBContract{id=8, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z', hbContractId=8, id=66, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='set', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)V', hbContractId=8, id=67, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=68, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=69, type=FULL, shouldReturnTrue=false}]}
HBContract{id=9, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;II)Z', hbContractId=9, id=70, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='set', descriptor='(Ljava/lang/Object;I)V', hbContractId=9, id=71, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=72, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=73, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=74, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=75, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=76, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=77, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=78, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=79, type=FULL, shouldReturnTrue=false}]}
HBContract{id=10, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;JJ)Z', hbContractId=10, id=80, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='set', descriptor='(Ljava/lang/Object;J)V', hbContractId=10, id=81, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=82, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=83, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=84, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=85, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=86, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=87, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=88, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=89, type=FULL, shouldReturnTrue=false}]}
HBContract{id=11, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='get', descriptor='(I)I', hbContractId=11, id=90, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='set', descriptor='(II)V', hbContractId=11, id=91, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndSet', descriptor='(II)I', hbContractId=11, id=92, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='compareAndSet', descriptor='(III)Z', hbContractId=11, id=93, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndIncrement', descriptor='(I)I', hbContractId=11, id=94, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndDecrement', descriptor='(I)I', hbContractId=11, id=95, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndAdd', descriptor='(II)I', hbContractId=11, id=96, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='incrementAndGet', descriptor='(I)I', hbContractId=11, id=97, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='decrementAndGet', descriptor='(I)I', hbContractId=11, id=98, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='addAndGet', descriptor='(II)I', hbContractId=11, id=99, type=FULL, shouldReturnTrue=false}]}
HBContract{id=12, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='get', descriptor='(I)J', hbContractId=12, id=100, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='set', descriptor='(IJ)V', hbContractId=12, id=101, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndSet', descriptor='(IJ)J', hbContractId=12, id=102, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='compareAndSet', descriptor='(IJJ)Z', hbContractId=12, id=103, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndIncrement', descriptor='(I)J', hbContractId=12, id=104, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndDecrement', descriptor='(I)J', hbContractId=12, id=105, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndAdd', descriptor='(IJ)J', hbContractId=12, id=106, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='incrementAndGet', descriptor='(I)J', hbContractId=12, id=107, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='decrementAndGet', descriptor='(I)J', hbContractId=12, id=108, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='addAndGet', descriptor='(IJ)J', hbContractId=12, id=109, type=FULL, shouldReturnTrue=false}]}
HBContract{id=13, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=13, id=110, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='set', descriptor='(ILjava/lang/Object;)V', hbContractId=13, id=111, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='getAndSet', descriptor='(ILjava/lang/Object;)Ljava/lang/Object;', hbContractId=13, id=112, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='compareAndSet', descriptor='(ILjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=13, id=113, type=FULL, shouldReturnTrue=true}]}
HBContract{id=14, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=114, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='offer', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=115, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='put', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=116, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='take', descriptor='()Ljava/lang/Object;', hbContractId=14, id=117, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='poll', descriptor='()Ljava/lang/Object;', hbContractId=14, id=118, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=15, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=119, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(ILjava/lang/Object;)V', hbContractId=15, id=120, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=121, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=122, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=123, type=RECEIVE, shouldReturnTrue=false}]}

25.04.2018 19:28:34 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor3 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor3
25.04.2018 19:28:34 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor2 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor2
25.04.2018 19:28:34 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor1 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor1
25.04.2018 19:28:35 System transformer couldn't detect if com/sun/proxy/$Proxy4 is a class loader: Cannot load class information for com.sun.proxy.$Proxy4
25.04.2018 19:28:35 System transformer couldn't detect if com/sun/proxy/$Proxy3 is a class loader: Cannot load class information for com.sun.proxy.$Proxy3
25.04.2018 19:28:35 System transformer couldn't detect if com/sun/proxy/$Proxy2 is a class loader: Cannot load class information for com.sun.proxy.$Proxy2
25.04.2018 19:28:35 System transformer couldn't detect if com/sun/proxy/$Proxy1 is a class loader: Cannot load class information for com.sun.proxy.$Proxy1
25.04.2018 19:28:39 System transformer couldn't detect if com/sun/proxy/$Proxy0 is a class loader: Cannot load class information for com.sun.proxy.$Proxy0
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample <---> Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample <---> Ljava/util/concurrent/locks/Lock;
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample <---> Ljava/lang/Runnable;
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample <---> Ljava/lang/Object;J
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample <---> Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample <---> Ljava/util/concurrent/atomic/AtomicInteger;
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample <---> Ljava/util/concurrent/atomic/AtomicLong;
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample <---> Ljava/util/concurrent/atomic/AtomicBoolean;
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample <---> Ljava/lang/Object;
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample <---> Ljava/util/concurrent/atomic/AtomicIntegerArray;I
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample <---> Ljava/util/concurrent/atomic/AtomicLongArray;I
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample <---> Ljava/util/concurrent/atomic/AtomicReferenceArray;I
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample <---> Ljava/util/concurrent/BlockingQueue;
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample <---> Ljava/util/concurrent/CopyOnWriteArrayList;
25.04.2018 19:28:40 14 composite keys generated.
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:28:40 14 samples generated
25.04.2018 19:28:40 sun.misc.Unsafe reference obtained!
25.04.2018 19:28:40 GuardedInterceptor initialized true
25.04.2018 19:28:41 1 more DRD thread : 7
25.04.2018 19:28:42 Match: sun.misc.Unsafe.getObjectVolatile <--> vertex9
25.04.2018 19:28:42 Post-retransformation done. Skipped:
drdjava.util: 69
javax.xml: 9
java.sql: 3
sun.reflect: 78
java.util: 206
sun.management: 5
sun.net: 16
java.beans: 1
javax.security: 1
sun.nio: 29
java.nio: 26
java.net: 15
com.sun: 7
sun.instrument: 4
sun.text: 5
java.math: 3
com.devexperts: 241
sun.misc: 66
java.security: 24
sun.security: 15
sun.io: 1
sun.util: 68
java.awt: 5
java.lang: 174
java.text: 24
org.objectweb: 36
java.io: 59
com.thoughtworks: 233
org.xmlpull: 3
javax.swing: 1
------------------------------------------------------
25.04.2018 19:28:42 

=====================================================
DRD 0.7-SNAPSHOT.201609291623 started it's work
Java 1.8.0_144 from D:\APP\JAVA\jre
=====================================================

25.04.2018 19:28:42 Match: java.util.concurrent.atomic.AtomicBoolean.compareAndSet <--> vertex63
25.04.2018 19:28:42 Match: sun.misc.Unsafe.compareAndSwapInt <--> vertex8
25.04.2018 19:28:42 Match: sun.misc.Unsafe.compareAndSwapObject <--> vertex6
25.04.2018 19:28:42 Match: sun.misc.Unsafe.compareAndSwapLong <--> vertex7
25.04.2018 19:28:42 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
10 active threads.
Memory usage: init = 134217728(131072K) used = 16422064(16037K) committed = 124256256(121344K) max = 1881145344(1837056K).
Contract clocks: 12 ( + 12 - 0 = 12. Disposal took 23 ms).
	Hits : 30.
	Approx total reserved size: 240; real size : 18. Dead threads clocks size: 0.
Volatile clocks: 15 ( + 15 - 0 = 15. Disposal took 0 ms).
	Hits : 41.
	Approx total reserved size: 300; real size : 4. Dead threads clocks size: 0.
Syn clocks: 4 ( + 4 - 0 = 4). New clock for nothing : 0.
	Hits : 19.
	Approx total reserved size : 60; real size : 10. Dead threads clocks size : 0.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 60; real size : 10. Dead threads clocks size: 0

Vector clock counters: 
	New array allocations for live clocks: 0 vs 97 reusages.
	Dead clocks during merge: 0 cached, 97 same, 0 new.
	Generations update: 0 light, 0 hard (0 of them from zero).
	Vector clock merge: 0 optimized vs 83 full acquires; 6 optimized vs 14 full releases. 9 two-way merges. 
Diff was calculated 0 times.
	Shared reads in data clock occurred 0 times.
	VC total live resizes: 0, total dead resizes: 0.
	Yield counter : 0.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/0=0
sync_method_exit: 0/0=0
monitor_enter: 9/0=9
monitor_exit: 9/0=9
wait: 0/0=0
join: 0/0=0
volatile: 41/0=41
contract_sync: 127/1=128
field_ops: 0/233=233
foreign_ops: 0/6357=6357
races: 0/0=0

Field access counters
0 DETECT
232 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
0 IGNORE_FINAL
0 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 1066 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
--------------------Total: 0------------------------



Stats gathered in 82 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:29:07 --------------------DRD settings:----------------------
logging_level = INFO
races_grouping = CALL_CLASS_AND_METHOD
report_races_on_foreign_calls = true
debugTransformMode = APPLICATION
data_clock_histogram_size = 20
internal_profiling_enabled = true
internal_metrics = FULL
-------------------------------------------------------
25.04.2018 19:29:08 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as file ...
25.04.2018 19:29:08 D:\work_study\courses\OS\DRD-0.7.1\config.xml (系统找不到指定的文件。)
25.04.2018 19:29:08 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as resource ...
25.04.2018 19:29:08 
Sync instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Race detection instrumentation scope config : ScopeConfig with default policy 'exclude all' and no special rules.

Accesses config:

Accesses of following fields wouldn't be instrumented : 
Any name if owner matches 'com/devexperts/util/.*'. 
OR
Any owner if name matches 'log|logger'. 
OR
Owner matches 'com/devexperts/app/ABC.*' and name matches 'my_field'.

Foreign calls of following methods wouldn't be instrumented : 
Any name if owner matches 'java/lang/Integer.*|java/lang/Boolean.*|com/google/common/base/Preconditions.*|java/lang/Float.*|java/util/concurrent/.*|java/io/PrintStream.*|java/lang/String.*|java/lang/Character.*|java/util/regex/Pattern.*|java/util/Properties.*|java/util/Arrays.*|com/google/common/collect/ImmutableList.*|com/thoughtworks/xstream/.*|java/lang/Thread.*|java/security/AccessController.*|java/lang/Math.*|java/util/EnumSet.*|javax/net/SocketFactory.*|org/zk.*|java/lang/Runtime.*|java/lang/Byte.*|java/lang/reflect.*|java/lang/Long.*|java/lang/Enum.*|org/apache/log4j/Logger.*|javax/swing/SwingUtilities.*|sun/misc/Unsafe.*|java/util/logging/.*|org/jdesktop.*|java/lang/Double.*|java/lang/System.*'. 
OR
Owner matches 'java/lang/Class.*' and name matches 'forName'. 
OR
Owner matches 'java/util/Calendar.*' and name matches 'getInstance'.

25.04.2018 19:29:08 
Contracts config:

Contracts matcher would try to apply following contracts sequentially. If no one matches, target method would be treated as write.
Contract{ class: java/util/Map.*, read: keySet|values|entrySet, write: null, raceDetectionMode: ALL}
Contract{ class: java/util/List.*, read: listIterator, write: null, raceDetectionMode: ALL}
Contract{ class: .*, read: get.*|toString|hashCode|equals|is.*|contains.*|iter.*|has.*|size, write: null, raceDetectionMode: ALL}

25.04.2018 19:29:08 Trace config: 
{com/devexperts/MyManagerImpl={myField= trackThreadAccess for any caller}}
*: {com/library/SomeClass= trackThreadAccess for any caller, java/util/List= printDataOperations for caller, matching pattern 'com/devexperts/jtt/tracker/gui/SystemTrayHelper.*'}

25.04.2018 19:29:08 Config initialized : true.
25.04.2018 19:29:08 Transformer and detector launched.
25.04.2018 19:29:08 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as file ...
25.04.2018 19:29:08 D:\work_study\courses\OS\DRD-0.7.1\hb-config.xml (系统找不到指定的文件。)
25.04.2018 19:29:08 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as resource ...
25.04.2018 19:29:08 
Happens-before config read successfully. Happens-before contracts are: 

HBContract{id=0, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='put', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=0, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=1, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=1, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='unlock', descriptor='()V', hbContractId=1, id=2, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='lock', descriptor='()V', hbContractId=1, id=3, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=2, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/Executor', name='execute', descriptor='(Ljava/lang/Runnable;)V', hbContractId=2, id=4, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/lang/Runnable', name='run', descriptor='()V', hbContractId=2, id=5, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=3, vertices=[HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapObject', descriptor='(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=3, id=6, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapLong', descriptor='(Ljava/lang/Object;JJJ)Z', hbContractId=3, id=7, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapInt', descriptor='(Ljava/lang/Object;JII)Z', hbContractId=3, id=8, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getObjectVolatile', descriptor='(Ljava/lang/Object;J)Ljava/lang/Object;', hbContractId=3, id=9, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putObjectVolatile', descriptor='(Ljava/lang/Object;JLjava/lang/Object;)V', hbContractId=3, id=10, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getIntVolatile', descriptor='(Ljava/lang/Object;J)I', hbContractId=3, id=11, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putIntVolatile', descriptor='(Ljava/lang/Object;JI)V', hbContractId=3, id=12, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getBooleanVolatile', descriptor='(Ljava/lang/Object;J)Z', hbContractId=3, id=13, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putBooleanVolatile', descriptor='(Ljava/lang/Object;JZ)V', hbContractId=3, id=14, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getByteVolatile', descriptor='(Ljava/lang/Object;J)B', hbContractId=3, id=15, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putByteVolatile', descriptor='(Ljava/lang/Object;JB)V', hbContractId=3, id=16, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getShortVolatile', descriptor='(Ljava/lang/Object;J)S', hbContractId=3, id=17, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putShortVolatile', descriptor='(Ljava/lang/Object;JS)V', hbContractId=3, id=18, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getCharVolatile', descriptor='(Ljava/lang/Object;J)C', hbContractId=3, id=19, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putCharVolatile', descriptor='(Ljava/lang/Object;JC)V', hbContractId=3, id=20, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getLongVolatile', descriptor='(Ljava/lang/Object;J)J', hbContractId=3, id=21, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putLongVolatile', descriptor='(Ljava/lang/Object;JJ)V', hbContractId=3, id=22, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getFloatVolatile', descriptor='(Ljava/lang/Object;J)F', hbContractId=3, id=23, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putFloatVolatile', descriptor='(Ljava/lang/Object;JF)V', hbContractId=3, id=24, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getDoubleVolatile', descriptor='(Ljava/lang/Object;J)D', hbContractId=3, id=25, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putDoubleVolatile', descriptor='(Ljava/lang/Object;JD)V', hbContractId=3, id=26, type=SEND, shouldReturnTrue=false}]}
HBContract{id=4, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquire', descriptor='(I)Z', hbContractId=4, id=27, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryRelease', descriptor='(I)Z', hbContractId=4, id=28, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireShared', descriptor='(I)Z', hbContractId=4, id=29, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryReleaseShared', descriptor='(I)Z', hbContractId=4, id=30, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquire', descriptor='(I)V', hbContractId=4, id=31, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireInterruptibly', descriptor='(I)V', hbContractId=4, id=32, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireNanos', descriptor='(IJ)Z', hbContractId=4, id=33, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='release', descriptor='(I)Z', hbContractId=4, id=34, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireShared', descriptor='(I)V', hbContractId=4, id=35, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireSharedInterruptibly', descriptor='(I)V', hbContractId=4, id=36, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireSharedNanos', descriptor='(IJ)Z', hbContractId=4, id=37, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='releaseShared', descriptor='(I)Z', hbContractId=4, id=38, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='setState', descriptor='(I)V', hbContractId=4, id=39, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='getState', descriptor='()I', hbContractId=4, id=40, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='compareAndSetState', descriptor='(II)Z', hbContractId=4, id=41, type=FULL, shouldReturnTrue=true}]}
HBContract{id=5, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='get', descriptor='()I', hbContractId=5, id=42, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='set', descriptor='(I)V', hbContractId=5, id=43, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndSet', descriptor='(I)I', hbContractId=5, id=44, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='compareAndSet', descriptor='(II)Z', hbContractId=5, id=45, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndIncrement', descriptor='()I', hbContractId=5, id=46, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndDecrement', descriptor='()I', hbContractId=5, id=47, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndAdd', descriptor='(I)I', hbContractId=5, id=48, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='incrementAndGet', descriptor='()I', hbContractId=5, id=49, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='decrementAndGet', descriptor='()I', hbContractId=5, id=50, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='addAndGet', descriptor='(I)I', hbContractId=5, id=51, type=FULL, shouldReturnTrue=false}]}
HBContract{id=6, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='get', descriptor='()J', hbContractId=6, id=52, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='set', descriptor='(J)V', hbContractId=6, id=53, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndSet', descriptor='(J)J', hbContractId=6, id=54, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='compareAndSet', descriptor='(JJ)Z', hbContractId=6, id=55, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndIncrement', descriptor='()J', hbContractId=6, id=56, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndDecrement', descriptor='()J', hbContractId=6, id=57, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndAdd', descriptor='(J)J', hbContractId=6, id=58, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='incrementAndGet', descriptor='()J', hbContractId=6, id=59, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='decrementAndGet', descriptor='()J', hbContractId=6, id=60, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='addAndGet', descriptor='(J)J', hbContractId=6, id=61, type=FULL, shouldReturnTrue=false}]}
HBContract{id=7, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='get', descriptor='()Z', hbContractId=7, id=62, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='compareAndSet', descriptor='(ZZ)Z', hbContractId=7, id=63, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='set', descriptor='(Z)V', hbContractId=7, id=64, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='getAndSet', descriptor='(Z)Z', hbContractId=7, id=65, type=FULL, shouldReturnTrue=false}]}
HBContract{id=8, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z', hbContractId=8, id=66, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='set', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)V', hbContractId=8, id=67, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=68, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=69, type=FULL, shouldReturnTrue=false}]}
HBContract{id=9, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;II)Z', hbContractId=9, id=70, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='set', descriptor='(Ljava/lang/Object;I)V', hbContractId=9, id=71, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=72, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=73, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=74, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=75, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=76, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=77, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=78, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=79, type=FULL, shouldReturnTrue=false}]}
HBContract{id=10, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;JJ)Z', hbContractId=10, id=80, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='set', descriptor='(Ljava/lang/Object;J)V', hbContractId=10, id=81, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=82, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=83, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=84, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=85, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=86, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=87, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=88, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=89, type=FULL, shouldReturnTrue=false}]}
HBContract{id=11, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='get', descriptor='(I)I', hbContractId=11, id=90, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='set', descriptor='(II)V', hbContractId=11, id=91, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndSet', descriptor='(II)I', hbContractId=11, id=92, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='compareAndSet', descriptor='(III)Z', hbContractId=11, id=93, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndIncrement', descriptor='(I)I', hbContractId=11, id=94, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndDecrement', descriptor='(I)I', hbContractId=11, id=95, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndAdd', descriptor='(II)I', hbContractId=11, id=96, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='incrementAndGet', descriptor='(I)I', hbContractId=11, id=97, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='decrementAndGet', descriptor='(I)I', hbContractId=11, id=98, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='addAndGet', descriptor='(II)I', hbContractId=11, id=99, type=FULL, shouldReturnTrue=false}]}
HBContract{id=12, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='get', descriptor='(I)J', hbContractId=12, id=100, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='set', descriptor='(IJ)V', hbContractId=12, id=101, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndSet', descriptor='(IJ)J', hbContractId=12, id=102, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='compareAndSet', descriptor='(IJJ)Z', hbContractId=12, id=103, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndIncrement', descriptor='(I)J', hbContractId=12, id=104, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndDecrement', descriptor='(I)J', hbContractId=12, id=105, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndAdd', descriptor='(IJ)J', hbContractId=12, id=106, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='incrementAndGet', descriptor='(I)J', hbContractId=12, id=107, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='decrementAndGet', descriptor='(I)J', hbContractId=12, id=108, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='addAndGet', descriptor='(IJ)J', hbContractId=12, id=109, type=FULL, shouldReturnTrue=false}]}
HBContract{id=13, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=13, id=110, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='set', descriptor='(ILjava/lang/Object;)V', hbContractId=13, id=111, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='getAndSet', descriptor='(ILjava/lang/Object;)Ljava/lang/Object;', hbContractId=13, id=112, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='compareAndSet', descriptor='(ILjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=13, id=113, type=FULL, shouldReturnTrue=true}]}
HBContract{id=14, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=114, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='offer', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=115, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='put', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=116, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='take', descriptor='()Ljava/lang/Object;', hbContractId=14, id=117, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='poll', descriptor='()Ljava/lang/Object;', hbContractId=14, id=118, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=15, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=119, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(ILjava/lang/Object;)V', hbContractId=15, id=120, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=121, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=122, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=123, type=RECEIVE, shouldReturnTrue=false}]}

25.04.2018 19:29:08 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor3 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor3
25.04.2018 19:29:08 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor2 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor2
25.04.2018 19:29:08 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor1 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor1
25.04.2018 19:29:09 System transformer couldn't detect if com/sun/proxy/$Proxy4 is a class loader: Cannot load class information for com.sun.proxy.$Proxy4
25.04.2018 19:29:09 System transformer couldn't detect if com/sun/proxy/$Proxy3 is a class loader: Cannot load class information for com.sun.proxy.$Proxy3
25.04.2018 19:29:09 System transformer couldn't detect if com/sun/proxy/$Proxy2 is a class loader: Cannot load class information for com.sun.proxy.$Proxy2
25.04.2018 19:29:09 System transformer couldn't detect if com/sun/proxy/$Proxy1 is a class loader: Cannot load class information for com.sun.proxy.$Proxy1
25.04.2018 19:29:13 System transformer couldn't detect if com/sun/proxy/$Proxy0 is a class loader: Cannot load class information for com.sun.proxy.$Proxy0
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample <---> Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample <---> Ljava/util/concurrent/locks/Lock;
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample <---> Ljava/lang/Runnable;
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample <---> Ljava/lang/Object;J
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample <---> Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample <---> Ljava/util/concurrent/atomic/AtomicInteger;
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample <---> Ljava/util/concurrent/atomic/AtomicLong;
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample <---> Ljava/util/concurrent/atomic/AtomicBoolean;
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample <---> Ljava/lang/Object;
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample <---> Ljava/util/concurrent/atomic/AtomicIntegerArray;I
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample <---> Ljava/util/concurrent/atomic/AtomicLongArray;I
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample <---> Ljava/util/concurrent/atomic/AtomicReferenceArray;I
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample <---> Ljava/util/concurrent/BlockingQueue;
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample <---> Ljava/util/concurrent/CopyOnWriteArrayList;
25.04.2018 19:29:13 14 composite keys generated.
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:13 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:14 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:14 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:14 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:14 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:29:14 14 samples generated
25.04.2018 19:29:14 sun.misc.Unsafe reference obtained!
25.04.2018 19:29:14 GuardedInterceptor initialized true
25.04.2018 19:29:14 1 more DRD thread : 7
25.04.2018 19:29:15 Match: sun.misc.Unsafe.getObjectVolatile <--> vertex9
25.04.2018 19:29:15 Post-retransformation done. Skipped:
drdjava.util: 69
javax.xml: 9
java.sql: 3
sun.reflect: 78
java.util: 206
sun.management: 5
sun.net: 16
java.beans: 1
javax.security: 1
sun.nio: 29
java.nio: 26
java.net: 15
com.sun: 7
sun.instrument: 4
sun.text: 5
java.math: 3
com.devexperts: 241
sun.misc: 66
java.security: 24
sun.security: 15
sun.io: 1
sun.util: 68
java.awt: 5
java.lang: 174
java.text: 24
org.objectweb: 36
java.io: 59
com.thoughtworks: 233
org.xmlpull: 3
javax.swing: 1
------------------------------------------------------
25.04.2018 19:29:15 

=====================================================
DRD 0.7-SNAPSHOT.201609291623 started it's work
Java 1.8.0_144 from D:\APP\JAVA\jre
=====================================================

25.04.2018 19:29:15 Match: java.util.concurrent.atomic.AtomicBoolean.compareAndSet <--> vertex63
25.04.2018 19:29:15 Match: sun.misc.Unsafe.compareAndSwapInt <--> vertex8
25.04.2018 19:29:15 Match: sun.misc.Unsafe.compareAndSwapObject <--> vertex6
25.04.2018 19:29:15 Match: sun.misc.Unsafe.compareAndSwapLong <--> vertex7
25.04.2018 19:29:44 Do not create tvc for drd thread id = 7
25.04.2018 19:29:44 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
9 active threads.
Memory usage: init = 134217728(131072K) used = 19586576(19127K) committed = 125304832(122368K) max = 1881145344(1837056K).
Contract clocks: 13 ( + 13 - 0 = 13. Disposal took 8 ms).
	Hits : 36.
	Approx total reserved size: 260; real size : 18. Dead threads clocks size: 10.
Volatile clocks: 15 ( + 15 - 0 = 15. Disposal took 0 ms).
	Hits : 53.
	Approx total reserved size: 300; real size : 4. Dead threads clocks size: 0.
Syn clocks: 6 ( + 6 - 0 = 6). New clock for nothing : 0.
	Hits : 61.
	Approx total reserved size : 100; real size : 18. Dead threads clocks size : 26.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 100; real size : 18. Dead threads clocks size: 26

Vector clock counters: 
	New array allocations for live clocks: 0 vs 165 reusages.
	Dead clocks during merge: 36 cached, 114 same, 15 new.
	Generations update: 38 light, 17 hard (22 of them from zero).
	Vector clock merge: 0 optimized vs 124 full acquires; 9 optimized vs 41 full releases. 19 two-way merges. 
Diff was calculated 1 times.
	Shared reads in data clock occurred 0 times.
	VC total live resizes: 0, total dead resizes: 0.
	Yield counter : 0.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/0=0
sync_method_exit: 0/0=0
monitor_enter: 35/0=35
monitor_exit: 32/0=32
wait: 1/0=1
join: 0/0=0
volatile: 63/22=85
contract_sync: 149/11=160
field_ops: 0/804=804
foreign_ops: 0/6771=6771
races: 0/0=0

Field access counters
0 DETECT
803 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
0 IGNORE_FINAL
0 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 1101 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
--------------------Total: 0------------------------



Stats gathered in 27 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:30:29 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Last time stats were gathered 45306 ms ago.
10 active threads.
Memory usage: init = 134217728(131072K) used = 28021120(27364K) committed = 125304832(122368K) max = 1881145344(1837056K).
Contract clocks: 13 ( + 0 - 0 = 0. Disposal took 0 ms).
	Hits : 40.
	Approx total reserved size: 260; real size : 20. Dead threads clocks size: 20.
Volatile clocks: 15 ( + 0 - 0 = 0. Disposal took 0 ms).
	Hits : 76.
	Approx total reserved size: 300; real size : 4. Dead threads clocks size: 0.
Syn clocks: 6 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 62.
	Approx total reserved size : 100; real size : 20. Dead threads clocks size : 60.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 100; real size : 20. Dead threads clocks size: 60

Vector clock counters: 
	New array allocations for live clocks: 0 vs 190 reusages.
	Dead clocks during merge: 55 cached, 111 same, 24 new.
	Generations update: 84 light, 12 hard (8 of them from zero).
	Vector clock merge: 0 optimized vs 155 full acquires; 8 optimized vs 35 full releases. 13 two-way merges. 
Diff was calculated 4 times.
	Shared reads in data clock occurred 0 times.
	VC total live resizes: 0, total dead resizes: 0.
	Yield counter : 0.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/0=0
sync_method_exit: 0/0=0
monitor_enter: 30/0=30
monitor_exit: 28/0=28
wait: 2/0=2
join: 0/0=0
volatile: 83/0=83
contract_sync: 55/0=55
field_ops: 0/2423=2423
foreign_ops: 0/1280=1280
races: 0/0=0

Field access counters
0 DETECT
2423 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
0 IGNORE_FINAL
0 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 1152 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
--------------------Total: 0------------------------



Stats gathered in 0 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:31:19 --------------------DRD settings:----------------------
logging_level = INFO
races_grouping = CALL_CLASS_AND_METHOD
report_races_on_foreign_calls = true
debugTransformMode = APPLICATION
data_clock_histogram_size = 20
internal_profiling_enabled = true
internal_metrics = FULL
-------------------------------------------------------
25.04.2018 19:31:20 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as file ...
25.04.2018 19:31:20 D:\work_study\courses\OS\DRD-0.7.1\config.xml (系统找不到指定的文件。)
25.04.2018 19:31:20 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as resource ...
25.04.2018 19:31:20 
Sync instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Race detection instrumentation scope config : ScopeConfig with default policy 'exclude all' and no special rules.

Accesses config:

Accesses of following fields wouldn't be instrumented : 
Any name if owner matches 'com/devexperts/util/.*'. 
OR
Any owner if name matches 'log|logger'. 
OR
Owner matches 'com/devexperts/app/ABC.*' and name matches 'my_field'.

Foreign calls of following methods wouldn't be instrumented : 
Any name if owner matches 'java/lang/Integer.*|java/lang/Boolean.*|com/google/common/base/Preconditions.*|java/lang/Float.*|java/util/concurrent/.*|java/io/PrintStream.*|java/lang/String.*|java/lang/Character.*|java/util/regex/Pattern.*|java/util/Properties.*|java/util/Arrays.*|com/google/common/collect/ImmutableList.*|com/thoughtworks/xstream/.*|java/lang/Thread.*|java/security/AccessController.*|java/lang/Math.*|java/util/EnumSet.*|javax/net/SocketFactory.*|org/zk.*|java/lang/Runtime.*|java/lang/Byte.*|java/lang/reflect.*|java/lang/Long.*|java/lang/Enum.*|org/apache/log4j/Logger.*|javax/swing/SwingUtilities.*|sun/misc/Unsafe.*|java/util/logging/.*|org/jdesktop.*|java/lang/Double.*|java/lang/System.*'. 
OR
Owner matches 'java/lang/Class.*' and name matches 'forName'. 
OR
Owner matches 'java/util/Calendar.*' and name matches 'getInstance'.

25.04.2018 19:31:20 
Contracts config:

Contracts matcher would try to apply following contracts sequentially. If no one matches, target method would be treated as write.
Contract{ class: java/util/Map.*, read: keySet|values|entrySet, write: null, raceDetectionMode: ALL}
Contract{ class: java/util/List.*, read: listIterator, write: null, raceDetectionMode: ALL}
Contract{ class: .*, read: get.*|toString|hashCode|equals|is.*|contains.*|iter.*|has.*|size, write: null, raceDetectionMode: ALL}

25.04.2018 19:31:20 Trace config: 
{com/devexperts/MyManagerImpl={myField= trackThreadAccess for any caller}}
*: {com/library/SomeClass= trackThreadAccess for any caller, java/util/List= printDataOperations for caller, matching pattern 'com/devexperts/jtt/tracker/gui/SystemTrayHelper.*'}

25.04.2018 19:31:20 Config initialized : true.
25.04.2018 19:31:20 Transformer and detector launched.
25.04.2018 19:31:20 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as file ...
25.04.2018 19:31:20 D:\work_study\courses\OS\DRD-0.7.1\hb-config.xml (系统找不到指定的文件。)
25.04.2018 19:31:20 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as resource ...
25.04.2018 19:31:20 
Happens-before config read successfully. Happens-before contracts are: 

HBContract{id=0, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='put', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=0, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=1, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=1, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='unlock', descriptor='()V', hbContractId=1, id=2, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='lock', descriptor='()V', hbContractId=1, id=3, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=2, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/Executor', name='execute', descriptor='(Ljava/lang/Runnable;)V', hbContractId=2, id=4, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/lang/Runnable', name='run', descriptor='()V', hbContractId=2, id=5, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=3, vertices=[HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapObject', descriptor='(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=3, id=6, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapLong', descriptor='(Ljava/lang/Object;JJJ)Z', hbContractId=3, id=7, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapInt', descriptor='(Ljava/lang/Object;JII)Z', hbContractId=3, id=8, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getObjectVolatile', descriptor='(Ljava/lang/Object;J)Ljava/lang/Object;', hbContractId=3, id=9, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putObjectVolatile', descriptor='(Ljava/lang/Object;JLjava/lang/Object;)V', hbContractId=3, id=10, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getIntVolatile', descriptor='(Ljava/lang/Object;J)I', hbContractId=3, id=11, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putIntVolatile', descriptor='(Ljava/lang/Object;JI)V', hbContractId=3, id=12, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getBooleanVolatile', descriptor='(Ljava/lang/Object;J)Z', hbContractId=3, id=13, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putBooleanVolatile', descriptor='(Ljava/lang/Object;JZ)V', hbContractId=3, id=14, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getByteVolatile', descriptor='(Ljava/lang/Object;J)B', hbContractId=3, id=15, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putByteVolatile', descriptor='(Ljava/lang/Object;JB)V', hbContractId=3, id=16, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getShortVolatile', descriptor='(Ljava/lang/Object;J)S', hbContractId=3, id=17, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putShortVolatile', descriptor='(Ljava/lang/Object;JS)V', hbContractId=3, id=18, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getCharVolatile', descriptor='(Ljava/lang/Object;J)C', hbContractId=3, id=19, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putCharVolatile', descriptor='(Ljava/lang/Object;JC)V', hbContractId=3, id=20, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getLongVolatile', descriptor='(Ljava/lang/Object;J)J', hbContractId=3, id=21, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putLongVolatile', descriptor='(Ljava/lang/Object;JJ)V', hbContractId=3, id=22, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getFloatVolatile', descriptor='(Ljava/lang/Object;J)F', hbContractId=3, id=23, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putFloatVolatile', descriptor='(Ljava/lang/Object;JF)V', hbContractId=3, id=24, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getDoubleVolatile', descriptor='(Ljava/lang/Object;J)D', hbContractId=3, id=25, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putDoubleVolatile', descriptor='(Ljava/lang/Object;JD)V', hbContractId=3, id=26, type=SEND, shouldReturnTrue=false}]}
HBContract{id=4, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquire', descriptor='(I)Z', hbContractId=4, id=27, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryRelease', descriptor='(I)Z', hbContractId=4, id=28, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireShared', descriptor='(I)Z', hbContractId=4, id=29, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryReleaseShared', descriptor='(I)Z', hbContractId=4, id=30, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquire', descriptor='(I)V', hbContractId=4, id=31, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireInterruptibly', descriptor='(I)V', hbContractId=4, id=32, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireNanos', descriptor='(IJ)Z', hbContractId=4, id=33, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='release', descriptor='(I)Z', hbContractId=4, id=34, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireShared', descriptor='(I)V', hbContractId=4, id=35, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireSharedInterruptibly', descriptor='(I)V', hbContractId=4, id=36, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireSharedNanos', descriptor='(IJ)Z', hbContractId=4, id=37, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='releaseShared', descriptor='(I)Z', hbContractId=4, id=38, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='setState', descriptor='(I)V', hbContractId=4, id=39, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='getState', descriptor='()I', hbContractId=4, id=40, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='compareAndSetState', descriptor='(II)Z', hbContractId=4, id=41, type=FULL, shouldReturnTrue=true}]}
HBContract{id=5, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='get', descriptor='()I', hbContractId=5, id=42, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='set', descriptor='(I)V', hbContractId=5, id=43, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndSet', descriptor='(I)I', hbContractId=5, id=44, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='compareAndSet', descriptor='(II)Z', hbContractId=5, id=45, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndIncrement', descriptor='()I', hbContractId=5, id=46, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndDecrement', descriptor='()I', hbContractId=5, id=47, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndAdd', descriptor='(I)I', hbContractId=5, id=48, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='incrementAndGet', descriptor='()I', hbContractId=5, id=49, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='decrementAndGet', descriptor='()I', hbContractId=5, id=50, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='addAndGet', descriptor='(I)I', hbContractId=5, id=51, type=FULL, shouldReturnTrue=false}]}
HBContract{id=6, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='get', descriptor='()J', hbContractId=6, id=52, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='set', descriptor='(J)V', hbContractId=6, id=53, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndSet', descriptor='(J)J', hbContractId=6, id=54, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='compareAndSet', descriptor='(JJ)Z', hbContractId=6, id=55, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndIncrement', descriptor='()J', hbContractId=6, id=56, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndDecrement', descriptor='()J', hbContractId=6, id=57, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndAdd', descriptor='(J)J', hbContractId=6, id=58, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='incrementAndGet', descriptor='()J', hbContractId=6, id=59, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='decrementAndGet', descriptor='()J', hbContractId=6, id=60, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='addAndGet', descriptor='(J)J', hbContractId=6, id=61, type=FULL, shouldReturnTrue=false}]}
HBContract{id=7, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='get', descriptor='()Z', hbContractId=7, id=62, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='compareAndSet', descriptor='(ZZ)Z', hbContractId=7, id=63, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='set', descriptor='(Z)V', hbContractId=7, id=64, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='getAndSet', descriptor='(Z)Z', hbContractId=7, id=65, type=FULL, shouldReturnTrue=false}]}
HBContract{id=8, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z', hbContractId=8, id=66, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='set', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)V', hbContractId=8, id=67, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=68, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=69, type=FULL, shouldReturnTrue=false}]}
HBContract{id=9, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;II)Z', hbContractId=9, id=70, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='set', descriptor='(Ljava/lang/Object;I)V', hbContractId=9, id=71, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=72, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=73, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=74, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=75, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=76, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=77, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=78, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=79, type=FULL, shouldReturnTrue=false}]}
HBContract{id=10, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;JJ)Z', hbContractId=10, id=80, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='set', descriptor='(Ljava/lang/Object;J)V', hbContractId=10, id=81, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=82, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=83, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=84, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=85, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=86, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=87, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=88, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=89, type=FULL, shouldReturnTrue=false}]}
HBContract{id=11, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='get', descriptor='(I)I', hbContractId=11, id=90, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='set', descriptor='(II)V', hbContractId=11, id=91, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndSet', descriptor='(II)I', hbContractId=11, id=92, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='compareAndSet', descriptor='(III)Z', hbContractId=11, id=93, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndIncrement', descriptor='(I)I', hbContractId=11, id=94, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndDecrement', descriptor='(I)I', hbContractId=11, id=95, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndAdd', descriptor='(II)I', hbContractId=11, id=96, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='incrementAndGet', descriptor='(I)I', hbContractId=11, id=97, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='decrementAndGet', descriptor='(I)I', hbContractId=11, id=98, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='addAndGet', descriptor='(II)I', hbContractId=11, id=99, type=FULL, shouldReturnTrue=false}]}
HBContract{id=12, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='get', descriptor='(I)J', hbContractId=12, id=100, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='set', descriptor='(IJ)V', hbContractId=12, id=101, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndSet', descriptor='(IJ)J', hbContractId=12, id=102, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='compareAndSet', descriptor='(IJJ)Z', hbContractId=12, id=103, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndIncrement', descriptor='(I)J', hbContractId=12, id=104, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndDecrement', descriptor='(I)J', hbContractId=12, id=105, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndAdd', descriptor='(IJ)J', hbContractId=12, id=106, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='incrementAndGet', descriptor='(I)J', hbContractId=12, id=107, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='decrementAndGet', descriptor='(I)J', hbContractId=12, id=108, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='addAndGet', descriptor='(IJ)J', hbContractId=12, id=109, type=FULL, shouldReturnTrue=false}]}
HBContract{id=13, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=13, id=110, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='set', descriptor='(ILjava/lang/Object;)V', hbContractId=13, id=111, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='getAndSet', descriptor='(ILjava/lang/Object;)Ljava/lang/Object;', hbContractId=13, id=112, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='compareAndSet', descriptor='(ILjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=13, id=113, type=FULL, shouldReturnTrue=true}]}
HBContract{id=14, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=114, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='offer', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=115, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='put', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=116, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='take', descriptor='()Ljava/lang/Object;', hbContractId=14, id=117, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='poll', descriptor='()Ljava/lang/Object;', hbContractId=14, id=118, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=15, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=119, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(ILjava/lang/Object;)V', hbContractId=15, id=120, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=121, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=122, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=123, type=RECEIVE, shouldReturnTrue=false}]}

25.04.2018 19:31:20 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor3 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor3
25.04.2018 19:31:20 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor2 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor2
25.04.2018 19:31:20 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor1 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor1
25.04.2018 19:31:20 System transformer couldn't detect if com/sun/proxy/$Proxy4 is a class loader: Cannot load class information for com.sun.proxy.$Proxy4
25.04.2018 19:31:21 System transformer couldn't detect if com/sun/proxy/$Proxy3 is a class loader: Cannot load class information for com.sun.proxy.$Proxy3
25.04.2018 19:31:21 System transformer couldn't detect if com/sun/proxy/$Proxy2 is a class loader: Cannot load class information for com.sun.proxy.$Proxy2
25.04.2018 19:31:21 System transformer couldn't detect if com/sun/proxy/$Proxy1 is a class loader: Cannot load class information for com.sun.proxy.$Proxy1
25.04.2018 19:31:24 System transformer couldn't detect if com/sun/proxy/$Proxy0 is a class loader: Cannot load class information for com.sun.proxy.$Proxy0
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample <---> Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample <---> Ljava/util/concurrent/locks/Lock;
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample <---> Ljava/lang/Runnable;
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample <---> Ljava/lang/Object;J
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample <---> Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample <---> Ljava/util/concurrent/atomic/AtomicInteger;
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample <---> Ljava/util/concurrent/atomic/AtomicLong;
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample <---> Ljava/util/concurrent/atomic/AtomicBoolean;
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample <---> Ljava/lang/Object;
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample <---> Ljava/util/concurrent/atomic/AtomicIntegerArray;I
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample <---> Ljava/util/concurrent/atomic/AtomicLongArray;I
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample <---> Ljava/util/concurrent/atomic/AtomicReferenceArray;I
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample <---> Ljava/util/concurrent/BlockingQueue;
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample <---> Ljava/util/concurrent/CopyOnWriteArrayList;
25.04.2018 19:31:25 14 composite keys generated.
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:31:25 14 samples generated
25.04.2018 19:31:26 sun.misc.Unsafe reference obtained!
25.04.2018 19:31:26 GuardedInterceptor initialized true
25.04.2018 19:31:26 1 more DRD thread : 7
25.04.2018 19:31:27 Match: sun.misc.Unsafe.getObjectVolatile <--> vertex9
25.04.2018 19:31:27 Post-retransformation done. Skipped:
drdjava.util: 69
javax.xml: 9
java.sql: 3
sun.reflect: 78
java.util: 206
sun.management: 5
sun.net: 16
java.beans: 1
javax.security: 1
sun.nio: 29
java.nio: 26
java.net: 15
com.sun: 7
sun.instrument: 4
sun.text: 5
java.math: 3
com.devexperts: 241
sun.misc: 66
java.security: 24
sun.security: 15
sun.io: 1
sun.util: 68
java.awt: 5
java.lang: 174
java.text: 24
org.objectweb: 36
java.io: 59
com.thoughtworks: 233
org.xmlpull: 3
javax.swing: 1
------------------------------------------------------
25.04.2018 19:31:27 

=====================================================
DRD 0.7-SNAPSHOT.201609291623 started it's work
Java 1.8.0_144 from D:\APP\JAVA\jre
=====================================================

25.04.2018 19:31:27 Match: java.util.concurrent.atomic.AtomicBoolean.compareAndSet <--> vertex63
25.04.2018 19:31:27 Match: sun.misc.Unsafe.compareAndSwapInt <--> vertex8
25.04.2018 19:31:27 Match: sun.misc.Unsafe.compareAndSwapObject <--> vertex6
25.04.2018 19:31:27 Match: sun.misc.Unsafe.compareAndSwapLong <--> vertex7
25.04.2018 19:31:27 Match: java.util.concurrent.Semaphore$NonfairSync.getState <--> vertex40
25.04.2018 19:31:27 Match: java.util.concurrent.Semaphore$NonfairSync.compareAndSetState <--> vertex41
25.04.2018 19:31:27 Match: java.util.concurrent.Semaphore$NonfairSync.acquireSharedInterruptibly <--> vertex36
25.04.2018 19:31:30 Match: java.util.concurrent.Semaphore$NonfairSync.releaseShared <--> vertex38
25.04.2018 19:31:51 Match: java.util.concurrent.Semaphore$NonfairSync.acquireShared <--> vertex35
25.04.2018 19:31:56 Do not create tvc for drd thread id = 7
25.04.2018 19:31:56 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
9 active threads.
Memory usage: init = 134217728(131072K) used = 20747216(20260K) committed = 124256256(121344K) max = 1881145344(1837056K).
Contract clocks: 17 ( + 17 - 0 = 17. Disposal took 12 ms).
	Hits : 81.
	Approx total reserved size: 340; real size : 40. Dead threads clocks size: 30.
Volatile clocks: 19 ( + 19 - 0 = 19. Disposal took 0 ms).
	Hits : 54.
	Approx total reserved size: 380; real size : 12. Dead threads clocks size: 0.
Syn clocks: 3 ( + 3 - 0 = 3). New clock for nothing : 0.
	Hits : 7.
	Approx total reserved size : 40; real size : 4. Dead threads clocks size : 0.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 40; real size : 4. Dead threads clocks size: 0

Vector clock counters: 
	New array allocations for live clocks: 0 vs 154 reusages.
	Dead clocks during merge: 29 cached, 115 same, 10 new.
	Generations update: 25 light, 26 hard (24 of them from zero).
	Vector clock merge: 4 optimized vs 111 full acquires; 5 optimized vs 43 full releases. 17 two-way merges. 
Diff was calculated 11 times.
	Shared reads in data clock occurred 0 times.
	VC total live resizes: 0, total dead resizes: 0.
	Yield counter : 0.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/0=0
sync_method_exit: 0/0=0
monitor_enter: 8/0=8
monitor_exit: 8/0=8
wait: 0/0=0
join: 0/0=0
volatile: 64/515=579
contract_sync: 208/258=466
field_ops: 0/807=807
foreign_ops: 0/6786=6786
races: 0/0=0

Field access counters
0 DETECT
806 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
0 IGNORE_FINAL
0 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 1126 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
--------------------Total: 0------------------------



Stats gathered in 32 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:32:51 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Last time stats were gathered 54886 ms ago.
12 active threads.
Memory usage: init = 134217728(131072K) used = 30265728(29556K) committed = 124256256(121344K) max = 1881145344(1837056K).
Contract clocks: 17 ( + 0 - 0 = 0. Disposal took 0 ms).
	Hits : 162.
	Approx total reserved size: 340; real size : 38. Dead threads clocks size: 100.
Volatile clocks: 19 ( + 0 - 0 = 0. Disposal took 0 ms).
	Hits : 97.
	Approx total reserved size: 380; real size : 12. Dead threads clocks size: 0.
Syn clocks: 3 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0.
	Approx total reserved size : 40; real size : 4. Dead threads clocks size : 0.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 40; real size : 4. Dead threads clocks size: 0

Vector clock counters: 
	New array allocations for live clocks: 0 vs 262 reusages.
	Dead clocks during merge: 85 cached, 143 same, 34 new.
	Generations update: 146 light, 22 hard (11 of them from zero).
	Vector clock merge: 12 optimized vs 203 full acquires; 15 optimized vs 59 full releases. 20 two-way merges. 
Diff was calculated 11 times.
	Shared reads in data clock occurred 0 times.
	VC total live resizes: 0, total dead resizes: 0.
	Yield counter : 0.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/0=0
sync_method_exit: 0/0=0
monitor_enter: 0/0=0
monitor_exit: 0/0=0
wait: 0/0=0
join: 0/0=0
volatile: 104/1125=1229
contract_sync: 214/562=776
field_ops: 0/3171=3171
foreign_ops: 0/1821=1821
races: 0/0=0

Field access counters
0 DETECT
3171 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
0 IGNORE_FINAL
0 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 1177 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
--------------------Total: 0------------------------



Stats gathered in 0 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:35:49 --------------------DRD settings:----------------------
logging_level = INFO
races_grouping = CALL_CLASS_AND_METHOD
report_races_on_foreign_calls = true
debugTransformMode = APPLICATION
data_clock_histogram_size = 20
internal_profiling_enabled = true
internal_metrics = FULL
-------------------------------------------------------
25.04.2018 19:35:49 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as file ...
25.04.2018 19:35:49 D:\work_study\courses\OS\DRD-0.7.1\config.xml (系统找不到指定的文件。)
25.04.2018 19:35:49 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as resource ...
25.04.2018 19:35:49 
Sync instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Race detection instrumentation scope config : ScopeConfig with default policy 'exclude all' and no special rules.

Accesses config:

Accesses of following fields wouldn't be instrumented : 
Any name if owner matches 'com/devexperts/util/.*'. 
OR
Any owner if name matches 'log|logger'. 
OR
Owner matches 'com/devexperts/app/ABC.*' and name matches 'my_field'.

Foreign calls of following methods wouldn't be instrumented : 
Any name if owner matches 'java/lang/Integer.*|java/lang/Boolean.*|com/google/common/base/Preconditions.*|java/lang/Float.*|java/util/concurrent/.*|java/io/PrintStream.*|java/lang/String.*|java/lang/Character.*|java/util/regex/Pattern.*|java/util/Properties.*|java/util/Arrays.*|com/google/common/collect/ImmutableList.*|com/thoughtworks/xstream/.*|java/lang/Thread.*|java/security/AccessController.*|java/lang/Math.*|java/util/EnumSet.*|javax/net/SocketFactory.*|org/zk.*|java/lang/Runtime.*|java/lang/Byte.*|java/lang/reflect.*|java/lang/Long.*|java/lang/Enum.*|org/apache/log4j/Logger.*|javax/swing/SwingUtilities.*|sun/misc/Unsafe.*|java/util/logging/.*|org/jdesktop.*|java/lang/Double.*|java/lang/System.*'. 
OR
Owner matches 'java/lang/Class.*' and name matches 'forName'. 
OR
Owner matches 'java/util/Calendar.*' and name matches 'getInstance'.

25.04.2018 19:35:49 
Contracts config:

Contracts matcher would try to apply following contracts sequentially. If no one matches, target method would be treated as write.
Contract{ class: java/util/Map.*, read: keySet|values|entrySet, write: null, raceDetectionMode: ALL}
Contract{ class: java/util/List.*, read: listIterator, write: null, raceDetectionMode: ALL}
Contract{ class: .*, read: get.*|toString|hashCode|equals|is.*|contains.*|iter.*|has.*|size, write: null, raceDetectionMode: ALL}

25.04.2018 19:35:49 Trace config: 
{com/devexperts/MyManagerImpl={myField= trackThreadAccess for any caller}}
*: {com/library/SomeClass= trackThreadAccess for any caller, java/util/List= printDataOperations for caller, matching pattern 'com/devexperts/jtt/tracker/gui/SystemTrayHelper.*'}

25.04.2018 19:35:49 Config initialized : true.
25.04.2018 19:35:49 Transformer and detector launched.
25.04.2018 19:35:49 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as file ...
25.04.2018 19:35:49 D:\work_study\courses\OS\DRD-0.7.1\hb-config.xml (系统找不到指定的文件。)
25.04.2018 19:35:49 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as resource ...
25.04.2018 19:35:49 
Happens-before config read successfully. Happens-before contracts are: 

HBContract{id=0, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='put', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=0, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=1, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=1, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='unlock', descriptor='()V', hbContractId=1, id=2, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='lock', descriptor='()V', hbContractId=1, id=3, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=2, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/Executor', name='execute', descriptor='(Ljava/lang/Runnable;)V', hbContractId=2, id=4, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/lang/Runnable', name='run', descriptor='()V', hbContractId=2, id=5, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=3, vertices=[HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapObject', descriptor='(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=3, id=6, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapLong', descriptor='(Ljava/lang/Object;JJJ)Z', hbContractId=3, id=7, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapInt', descriptor='(Ljava/lang/Object;JII)Z', hbContractId=3, id=8, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getObjectVolatile', descriptor='(Ljava/lang/Object;J)Ljava/lang/Object;', hbContractId=3, id=9, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putObjectVolatile', descriptor='(Ljava/lang/Object;JLjava/lang/Object;)V', hbContractId=3, id=10, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getIntVolatile', descriptor='(Ljava/lang/Object;J)I', hbContractId=3, id=11, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putIntVolatile', descriptor='(Ljava/lang/Object;JI)V', hbContractId=3, id=12, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getBooleanVolatile', descriptor='(Ljava/lang/Object;J)Z', hbContractId=3, id=13, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putBooleanVolatile', descriptor='(Ljava/lang/Object;JZ)V', hbContractId=3, id=14, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getByteVolatile', descriptor='(Ljava/lang/Object;J)B', hbContractId=3, id=15, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putByteVolatile', descriptor='(Ljava/lang/Object;JB)V', hbContractId=3, id=16, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getShortVolatile', descriptor='(Ljava/lang/Object;J)S', hbContractId=3, id=17, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putShortVolatile', descriptor='(Ljava/lang/Object;JS)V', hbContractId=3, id=18, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getCharVolatile', descriptor='(Ljava/lang/Object;J)C', hbContractId=3, id=19, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putCharVolatile', descriptor='(Ljava/lang/Object;JC)V', hbContractId=3, id=20, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getLongVolatile', descriptor='(Ljava/lang/Object;J)J', hbContractId=3, id=21, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putLongVolatile', descriptor='(Ljava/lang/Object;JJ)V', hbContractId=3, id=22, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getFloatVolatile', descriptor='(Ljava/lang/Object;J)F', hbContractId=3, id=23, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putFloatVolatile', descriptor='(Ljava/lang/Object;JF)V', hbContractId=3, id=24, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getDoubleVolatile', descriptor='(Ljava/lang/Object;J)D', hbContractId=3, id=25, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putDoubleVolatile', descriptor='(Ljava/lang/Object;JD)V', hbContractId=3, id=26, type=SEND, shouldReturnTrue=false}]}
HBContract{id=4, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquire', descriptor='(I)Z', hbContractId=4, id=27, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryRelease', descriptor='(I)Z', hbContractId=4, id=28, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireShared', descriptor='(I)Z', hbContractId=4, id=29, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryReleaseShared', descriptor='(I)Z', hbContractId=4, id=30, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquire', descriptor='(I)V', hbContractId=4, id=31, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireInterruptibly', descriptor='(I)V', hbContractId=4, id=32, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireNanos', descriptor='(IJ)Z', hbContractId=4, id=33, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='release', descriptor='(I)Z', hbContractId=4, id=34, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireShared', descriptor='(I)V', hbContractId=4, id=35, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireSharedInterruptibly', descriptor='(I)V', hbContractId=4, id=36, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireSharedNanos', descriptor='(IJ)Z', hbContractId=4, id=37, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='releaseShared', descriptor='(I)Z', hbContractId=4, id=38, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='setState', descriptor='(I)V', hbContractId=4, id=39, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='getState', descriptor='()I', hbContractId=4, id=40, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='compareAndSetState', descriptor='(II)Z', hbContractId=4, id=41, type=FULL, shouldReturnTrue=true}]}
HBContract{id=5, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='get', descriptor='()I', hbContractId=5, id=42, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='set', descriptor='(I)V', hbContractId=5, id=43, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndSet', descriptor='(I)I', hbContractId=5, id=44, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='compareAndSet', descriptor='(II)Z', hbContractId=5, id=45, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndIncrement', descriptor='()I', hbContractId=5, id=46, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndDecrement', descriptor='()I', hbContractId=5, id=47, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndAdd', descriptor='(I)I', hbContractId=5, id=48, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='incrementAndGet', descriptor='()I', hbContractId=5, id=49, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='decrementAndGet', descriptor='()I', hbContractId=5, id=50, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='addAndGet', descriptor='(I)I', hbContractId=5, id=51, type=FULL, shouldReturnTrue=false}]}
HBContract{id=6, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='get', descriptor='()J', hbContractId=6, id=52, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='set', descriptor='(J)V', hbContractId=6, id=53, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndSet', descriptor='(J)J', hbContractId=6, id=54, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='compareAndSet', descriptor='(JJ)Z', hbContractId=6, id=55, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndIncrement', descriptor='()J', hbContractId=6, id=56, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndDecrement', descriptor='()J', hbContractId=6, id=57, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndAdd', descriptor='(J)J', hbContractId=6, id=58, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='incrementAndGet', descriptor='()J', hbContractId=6, id=59, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='decrementAndGet', descriptor='()J', hbContractId=6, id=60, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='addAndGet', descriptor='(J)J', hbContractId=6, id=61, type=FULL, shouldReturnTrue=false}]}
HBContract{id=7, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='get', descriptor='()Z', hbContractId=7, id=62, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='compareAndSet', descriptor='(ZZ)Z', hbContractId=7, id=63, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='set', descriptor='(Z)V', hbContractId=7, id=64, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='getAndSet', descriptor='(Z)Z', hbContractId=7, id=65, type=FULL, shouldReturnTrue=false}]}
HBContract{id=8, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z', hbContractId=8, id=66, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='set', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)V', hbContractId=8, id=67, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=68, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=69, type=FULL, shouldReturnTrue=false}]}
HBContract{id=9, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;II)Z', hbContractId=9, id=70, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='set', descriptor='(Ljava/lang/Object;I)V', hbContractId=9, id=71, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=72, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=73, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=74, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=75, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=76, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=77, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=78, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=79, type=FULL, shouldReturnTrue=false}]}
HBContract{id=10, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;JJ)Z', hbContractId=10, id=80, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='set', descriptor='(Ljava/lang/Object;J)V', hbContractId=10, id=81, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=82, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=83, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=84, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=85, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=86, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=87, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=88, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=89, type=FULL, shouldReturnTrue=false}]}
HBContract{id=11, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='get', descriptor='(I)I', hbContractId=11, id=90, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='set', descriptor='(II)V', hbContractId=11, id=91, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndSet', descriptor='(II)I', hbContractId=11, id=92, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='compareAndSet', descriptor='(III)Z', hbContractId=11, id=93, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndIncrement', descriptor='(I)I', hbContractId=11, id=94, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndDecrement', descriptor='(I)I', hbContractId=11, id=95, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndAdd', descriptor='(II)I', hbContractId=11, id=96, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='incrementAndGet', descriptor='(I)I', hbContractId=11, id=97, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='decrementAndGet', descriptor='(I)I', hbContractId=11, id=98, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='addAndGet', descriptor='(II)I', hbContractId=11, id=99, type=FULL, shouldReturnTrue=false}]}
HBContract{id=12, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='get', descriptor='(I)J', hbContractId=12, id=100, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='set', descriptor='(IJ)V', hbContractId=12, id=101, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndSet', descriptor='(IJ)J', hbContractId=12, id=102, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='compareAndSet', descriptor='(IJJ)Z', hbContractId=12, id=103, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndIncrement', descriptor='(I)J', hbContractId=12, id=104, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndDecrement', descriptor='(I)J', hbContractId=12, id=105, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndAdd', descriptor='(IJ)J', hbContractId=12, id=106, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='incrementAndGet', descriptor='(I)J', hbContractId=12, id=107, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='decrementAndGet', descriptor='(I)J', hbContractId=12, id=108, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='addAndGet', descriptor='(IJ)J', hbContractId=12, id=109, type=FULL, shouldReturnTrue=false}]}
HBContract{id=13, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=13, id=110, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='set', descriptor='(ILjava/lang/Object;)V', hbContractId=13, id=111, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='getAndSet', descriptor='(ILjava/lang/Object;)Ljava/lang/Object;', hbContractId=13, id=112, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='compareAndSet', descriptor='(ILjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=13, id=113, type=FULL, shouldReturnTrue=true}]}
HBContract{id=14, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=114, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='offer', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=115, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='put', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=116, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='take', descriptor='()Ljava/lang/Object;', hbContractId=14, id=117, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='poll', descriptor='()Ljava/lang/Object;', hbContractId=14, id=118, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=15, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=119, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(ILjava/lang/Object;)V', hbContractId=15, id=120, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=121, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=122, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=123, type=RECEIVE, shouldReturnTrue=false}]}

25.04.2018 19:35:49 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor3 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor3
25.04.2018 19:35:49 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor2 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor2
25.04.2018 19:35:49 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor1 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor1
25.04.2018 19:35:50 System transformer couldn't detect if com/sun/proxy/$Proxy4 is a class loader: Cannot load class information for com.sun.proxy.$Proxy4
25.04.2018 19:35:50 System transformer couldn't detect if com/sun/proxy/$Proxy3 is a class loader: Cannot load class information for com.sun.proxy.$Proxy3
25.04.2018 19:35:50 System transformer couldn't detect if com/sun/proxy/$Proxy2 is a class loader: Cannot load class information for com.sun.proxy.$Proxy2
25.04.2018 19:35:51 System transformer couldn't detect if com/sun/proxy/$Proxy1 is a class loader: Cannot load class information for com.sun.proxy.$Proxy1
25.04.2018 19:35:54 System transformer couldn't detect if com/sun/proxy/$Proxy0 is a class loader: Cannot load class information for com.sun.proxy.$Proxy0
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample <---> Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample <---> Ljava/util/concurrent/locks/Lock;
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample <---> Ljava/lang/Runnable;
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample <---> Ljava/lang/Object;J
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample <---> Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample <---> Ljava/util/concurrent/atomic/AtomicInteger;
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample <---> Ljava/util/concurrent/atomic/AtomicLong;
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample <---> Ljava/util/concurrent/atomic/AtomicBoolean;
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample <---> Ljava/lang/Object;
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample <---> Ljava/util/concurrent/atomic/AtomicIntegerArray;I
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample <---> Ljava/util/concurrent/atomic/AtomicLongArray;I
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample <---> Ljava/util/concurrent/atomic/AtomicReferenceArray;I
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample <---> Ljava/util/concurrent/BlockingQueue;
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample <---> Ljava/util/concurrent/CopyOnWriteArrayList;
25.04.2018 19:35:56 14 composite keys generated.
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:35:56 14 samples generated
25.04.2018 19:35:56 sun.misc.Unsafe reference obtained!
25.04.2018 19:35:56 GuardedInterceptor initialized true
25.04.2018 19:35:56 1 more DRD thread : 7
25.04.2018 19:35:57 Match: sun.misc.Unsafe.getObjectVolatile <--> vertex9
25.04.2018 19:35:57 Post-retransformation done. Skipped:
drdjava.util: 69
javax.xml: 9
java.sql: 3
sun.reflect: 78
java.util: 206
sun.management: 5
sun.net: 16
java.beans: 1
javax.security: 1
sun.nio: 29
java.nio: 26
java.net: 15
com.sun: 7
sun.instrument: 4
sun.text: 5
java.math: 3
com.devexperts: 241
sun.misc: 66
java.security: 24
sun.security: 15
sun.io: 1
sun.util: 68
java.awt: 5
java.lang: 174
java.text: 24
org.objectweb: 36
java.io: 59
com.thoughtworks: 233
org.xmlpull: 3
javax.swing: 1
------------------------------------------------------
25.04.2018 19:35:57 

=====================================================
DRD 0.7-SNAPSHOT.201609291623 started it's work
Java 1.8.0_144 from D:\APP\JAVA\jre
=====================================================

25.04.2018 19:35:57 Match: java.util.concurrent.atomic.AtomicBoolean.compareAndSet <--> vertex63
25.04.2018 19:35:57 Match: sun.misc.Unsafe.compareAndSwapInt <--> vertex8
25.04.2018 19:35:57 Match: sun.misc.Unsafe.compareAndSwapObject <--> vertex6
25.04.2018 19:35:57 Match: sun.misc.Unsafe.compareAndSwapLong <--> vertex7
25.04.2018 19:35:57 Match: java.util.concurrent.Semaphore$NonfairSync.getState <--> vertex40
25.04.2018 19:35:57 Match: java.util.concurrent.Semaphore$NonfairSync.compareAndSetState <--> vertex41
25.04.2018 19:35:57 Match: java.util.concurrent.Semaphore$NonfairSync.acquireSharedInterruptibly <--> vertex36
25.04.2018 19:36:02 Match: java.util.concurrent.Semaphore$NonfairSync.releaseShared <--> vertex38
25.04.2018 19:36:05 Match: java.util.concurrent.Semaphore$NonfairSync.acquireShared <--> vertex35
25.04.2018 19:36:26 Do not create tvc for drd thread id = 7
25.04.2018 19:36:26 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
13 active threads.
Memory usage: init = 134217728(131072K) used = 23605976(23052K) committed = 124256256(121344K) max = 1881145344(1837056K).
Contract clocks: 16 ( + 16 - 0 = 16. Disposal took 11 ms).
	Hits : 158.
	Approx total reserved size: 320; real size : 44. Dead threads clocks size: 82.
Volatile clocks: 19 ( + 19 - 0 = 19. Disposal took 0 ms).
	Hits : 84.
	Approx total reserved size: 380; real size : 12. Dead threads clocks size: 0.
Syn clocks: 3 ( + 3 - 0 = 3). New clock for nothing : 0.
	Hits : 7.
	Approx total reserved size : 40; real size : 4. Dead threads clocks size : 0.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 40; real size : 4. Dead threads clocks size: 0

Vector clock counters: 
	New array allocations for live clocks: 0 vs 287 reusages.
	Dead clocks during merge: 77 cached, 163 same, 47 new.
	Generations update: 58 light, 51 hard (36 of them from zero).
	Vector clock merge: 12 optimized vs 202 full acquires; 15 optimized vs 85 full releases. 47 two-way merges. 
Diff was calculated 18 times.
	Shared reads in data clock occurred 0 times.
	VC total live resizes: 0, total dead resizes: 16.
	Yield counter : 0.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/0=0
sync_method_exit: 0/0=0
monitor_enter: 8/0=8
monitor_exit: 8/0=8
wait: 0/0=0
join: 0/0=0
volatile: 94/274=368
contract_sync: 306/350=656
field_ops: 0/1014=1014
foreign_ops: 0/7250=7250
races: 0/0=0

Field access counters
0 DETECT
1013 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
0 IGNORE_FINAL
0 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 1125 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
--------------------Total: 0------------------------



Stats gathered in 31 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:36:29 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Last time stats were gathered 2341 ms ago.
11 active threads.
Memory usage: init = 134217728(131072K) used = 29955944(29253K) committed = 124256256(121344K) max = 1881145344(1837056K).
Contract clocks: 16 ( + 0 - 0 = 0. Disposal took 0 ms).
	Hits : 12.
	Approx total reserved size: 320; real size : 48. Dead threads clocks size: 98.
Volatile clocks: 19 ( + 0 - 0 = 0. Disposal took 0 ms).
	Hits : 0.
	Approx total reserved size: 380; real size : 12. Dead threads clocks size: 0.
Syn clocks: 3 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0.
	Approx total reserved size : 40; real size : 4. Dead threads clocks size : 0.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 40; real size : 4. Dead threads clocks size: 0

Vector clock counters: 
	New array allocations for live clocks: 0 vs 13 reusages.
	Dead clocks during merge: 8 cached, 5 same, 0 new.
	Generations update: 8 light, 5 hard (2 of them from zero).
	Vector clock merge: 0 optimized vs 5 full acquires; 0 optimized vs 8 full releases. 0 two-way merges. 
Diff was calculated 3 times.
	Shared reads in data clock occurred 0 times.
	VC total live resizes: 0, total dead resizes: 3.
	Yield counter : 0.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/0=0
sync_method_exit: 0/0=0
monitor_enter: 0/0=0
monitor_exit: 0/0=0
wait: 0/0=0
join: 0/0=0
volatile: 7/32=39
contract_sync: 19/44=63
field_ops: 0/62=62
foreign_ops: 0/109=109
races: 0/0=0

Field access counters
0 DETECT
62 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
0 IGNORE_FINAL
0 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 1176 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
--------------------Total: 0------------------------



Stats gathered in 0 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:37:47 --------------------DRD settings:----------------------
logging_level = INFO
races_grouping = CALL_CLASS_AND_METHOD
report_races_on_foreign_calls = true
debugTransformMode = APPLICATION
data_clock_histogram_size = 20
internal_profiling_enabled = true
internal_metrics = FULL
-------------------------------------------------------
25.04.2018 19:37:47 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as file ...
25.04.2018 19:37:47 D:\work_study\courses\OS\DRD-0.7.1\config.xml (系统找不到指定的文件。)
25.04.2018 19:37:47 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as resource ...
25.04.2018 19:37:47 
Sync instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Race detection instrumentation scope config : ScopeConfig with default policy 'exclude all' and no special rules.

Accesses config:

Accesses of following fields wouldn't be instrumented : 
Any name if owner matches 'com/devexperts/util/.*'. 
OR
Any owner if name matches 'log|logger'. 
OR
Owner matches 'com/devexperts/app/ABC.*' and name matches 'my_field'.

Foreign calls of following methods wouldn't be instrumented : 
Any name if owner matches 'java/lang/Integer.*|java/lang/Boolean.*|com/google/common/base/Preconditions.*|java/lang/Float.*|java/util/concurrent/.*|java/io/PrintStream.*|java/lang/String.*|java/lang/Character.*|java/util/regex/Pattern.*|java/util/Properties.*|java/util/Arrays.*|com/google/common/collect/ImmutableList.*|com/thoughtworks/xstream/.*|java/lang/Thread.*|java/security/AccessController.*|java/lang/Math.*|java/util/EnumSet.*|javax/net/SocketFactory.*|org/zk.*|java/lang/Runtime.*|java/lang/Byte.*|java/lang/reflect.*|java/lang/Long.*|java/lang/Enum.*|org/apache/log4j/Logger.*|javax/swing/SwingUtilities.*|sun/misc/Unsafe.*|java/util/logging/.*|org/jdesktop.*|java/lang/Double.*|java/lang/System.*'. 
OR
Owner matches 'java/lang/Class.*' and name matches 'forName'. 
OR
Owner matches 'java/util/Calendar.*' and name matches 'getInstance'.

25.04.2018 19:37:47 
Contracts config:

Contracts matcher would try to apply following contracts sequentially. If no one matches, target method would be treated as write.
Contract{ class: java/util/Map.*, read: keySet|values|entrySet, write: null, raceDetectionMode: ALL}
Contract{ class: java/util/List.*, read: listIterator, write: null, raceDetectionMode: ALL}
Contract{ class: .*, read: get.*|toString|hashCode|equals|is.*|contains.*|iter.*|has.*|size, write: null, raceDetectionMode: ALL}

25.04.2018 19:37:47 Trace config: 
{com/devexperts/MyManagerImpl={myField= trackThreadAccess for any caller}}
*: {com/library/SomeClass= trackThreadAccess for any caller, java/util/List= printDataOperations for caller, matching pattern 'com/devexperts/jtt/tracker/gui/SystemTrayHelper.*'}

25.04.2018 19:37:47 Config initialized : true.
25.04.2018 19:37:47 Transformer and detector launched.
25.04.2018 19:37:47 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as file ...
25.04.2018 19:37:47 D:\work_study\courses\OS\DRD-0.7.1\hb-config.xml (系统找不到指定的文件。)
25.04.2018 19:37:47 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as resource ...
25.04.2018 19:37:47 
Happens-before config read successfully. Happens-before contracts are: 

HBContract{id=0, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='put', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=0, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=1, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=1, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='unlock', descriptor='()V', hbContractId=1, id=2, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='lock', descriptor='()V', hbContractId=1, id=3, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=2, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/Executor', name='execute', descriptor='(Ljava/lang/Runnable;)V', hbContractId=2, id=4, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/lang/Runnable', name='run', descriptor='()V', hbContractId=2, id=5, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=3, vertices=[HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapObject', descriptor='(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=3, id=6, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapLong', descriptor='(Ljava/lang/Object;JJJ)Z', hbContractId=3, id=7, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapInt', descriptor='(Ljava/lang/Object;JII)Z', hbContractId=3, id=8, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getObjectVolatile', descriptor='(Ljava/lang/Object;J)Ljava/lang/Object;', hbContractId=3, id=9, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putObjectVolatile', descriptor='(Ljava/lang/Object;JLjava/lang/Object;)V', hbContractId=3, id=10, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getIntVolatile', descriptor='(Ljava/lang/Object;J)I', hbContractId=3, id=11, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putIntVolatile', descriptor='(Ljava/lang/Object;JI)V', hbContractId=3, id=12, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getBooleanVolatile', descriptor='(Ljava/lang/Object;J)Z', hbContractId=3, id=13, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putBooleanVolatile', descriptor='(Ljava/lang/Object;JZ)V', hbContractId=3, id=14, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getByteVolatile', descriptor='(Ljava/lang/Object;J)B', hbContractId=3, id=15, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putByteVolatile', descriptor='(Ljava/lang/Object;JB)V', hbContractId=3, id=16, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getShortVolatile', descriptor='(Ljava/lang/Object;J)S', hbContractId=3, id=17, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putShortVolatile', descriptor='(Ljava/lang/Object;JS)V', hbContractId=3, id=18, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getCharVolatile', descriptor='(Ljava/lang/Object;J)C', hbContractId=3, id=19, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putCharVolatile', descriptor='(Ljava/lang/Object;JC)V', hbContractId=3, id=20, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getLongVolatile', descriptor='(Ljava/lang/Object;J)J', hbContractId=3, id=21, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putLongVolatile', descriptor='(Ljava/lang/Object;JJ)V', hbContractId=3, id=22, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getFloatVolatile', descriptor='(Ljava/lang/Object;J)F', hbContractId=3, id=23, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putFloatVolatile', descriptor='(Ljava/lang/Object;JF)V', hbContractId=3, id=24, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getDoubleVolatile', descriptor='(Ljava/lang/Object;J)D', hbContractId=3, id=25, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putDoubleVolatile', descriptor='(Ljava/lang/Object;JD)V', hbContractId=3, id=26, type=SEND, shouldReturnTrue=false}]}
HBContract{id=4, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquire', descriptor='(I)Z', hbContractId=4, id=27, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryRelease', descriptor='(I)Z', hbContractId=4, id=28, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireShared', descriptor='(I)Z', hbContractId=4, id=29, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryReleaseShared', descriptor='(I)Z', hbContractId=4, id=30, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquire', descriptor='(I)V', hbContractId=4, id=31, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireInterruptibly', descriptor='(I)V', hbContractId=4, id=32, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireNanos', descriptor='(IJ)Z', hbContractId=4, id=33, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='release', descriptor='(I)Z', hbContractId=4, id=34, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireShared', descriptor='(I)V', hbContractId=4, id=35, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireSharedInterruptibly', descriptor='(I)V', hbContractId=4, id=36, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireSharedNanos', descriptor='(IJ)Z', hbContractId=4, id=37, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='releaseShared', descriptor='(I)Z', hbContractId=4, id=38, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='setState', descriptor='(I)V', hbContractId=4, id=39, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='getState', descriptor='()I', hbContractId=4, id=40, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='compareAndSetState', descriptor='(II)Z', hbContractId=4, id=41, type=FULL, shouldReturnTrue=true}]}
HBContract{id=5, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='get', descriptor='()I', hbContractId=5, id=42, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='set', descriptor='(I)V', hbContractId=5, id=43, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndSet', descriptor='(I)I', hbContractId=5, id=44, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='compareAndSet', descriptor='(II)Z', hbContractId=5, id=45, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndIncrement', descriptor='()I', hbContractId=5, id=46, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndDecrement', descriptor='()I', hbContractId=5, id=47, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndAdd', descriptor='(I)I', hbContractId=5, id=48, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='incrementAndGet', descriptor='()I', hbContractId=5, id=49, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='decrementAndGet', descriptor='()I', hbContractId=5, id=50, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='addAndGet', descriptor='(I)I', hbContractId=5, id=51, type=FULL, shouldReturnTrue=false}]}
HBContract{id=6, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='get', descriptor='()J', hbContractId=6, id=52, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='set', descriptor='(J)V', hbContractId=6, id=53, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndSet', descriptor='(J)J', hbContractId=6, id=54, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='compareAndSet', descriptor='(JJ)Z', hbContractId=6, id=55, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndIncrement', descriptor='()J', hbContractId=6, id=56, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndDecrement', descriptor='()J', hbContractId=6, id=57, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndAdd', descriptor='(J)J', hbContractId=6, id=58, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='incrementAndGet', descriptor='()J', hbContractId=6, id=59, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='decrementAndGet', descriptor='()J', hbContractId=6, id=60, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='addAndGet', descriptor='(J)J', hbContractId=6, id=61, type=FULL, shouldReturnTrue=false}]}
HBContract{id=7, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='get', descriptor='()Z', hbContractId=7, id=62, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='compareAndSet', descriptor='(ZZ)Z', hbContractId=7, id=63, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='set', descriptor='(Z)V', hbContractId=7, id=64, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='getAndSet', descriptor='(Z)Z', hbContractId=7, id=65, type=FULL, shouldReturnTrue=false}]}
HBContract{id=8, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z', hbContractId=8, id=66, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='set', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)V', hbContractId=8, id=67, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=68, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=69, type=FULL, shouldReturnTrue=false}]}
HBContract{id=9, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;II)Z', hbContractId=9, id=70, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='set', descriptor='(Ljava/lang/Object;I)V', hbContractId=9, id=71, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=72, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=73, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=74, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=75, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=76, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=77, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=78, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=79, type=FULL, shouldReturnTrue=false}]}
HBContract{id=10, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;JJ)Z', hbContractId=10, id=80, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='set', descriptor='(Ljava/lang/Object;J)V', hbContractId=10, id=81, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=82, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=83, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=84, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=85, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=86, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=87, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=88, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=89, type=FULL, shouldReturnTrue=false}]}
HBContract{id=11, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='get', descriptor='(I)I', hbContractId=11, id=90, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='set', descriptor='(II)V', hbContractId=11, id=91, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndSet', descriptor='(II)I', hbContractId=11, id=92, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='compareAndSet', descriptor='(III)Z', hbContractId=11, id=93, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndIncrement', descriptor='(I)I', hbContractId=11, id=94, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndDecrement', descriptor='(I)I', hbContractId=11, id=95, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndAdd', descriptor='(II)I', hbContractId=11, id=96, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='incrementAndGet', descriptor='(I)I', hbContractId=11, id=97, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='decrementAndGet', descriptor='(I)I', hbContractId=11, id=98, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='addAndGet', descriptor='(II)I', hbContractId=11, id=99, type=FULL, shouldReturnTrue=false}]}
HBContract{id=12, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='get', descriptor='(I)J', hbContractId=12, id=100, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='set', descriptor='(IJ)V', hbContractId=12, id=101, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndSet', descriptor='(IJ)J', hbContractId=12, id=102, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='compareAndSet', descriptor='(IJJ)Z', hbContractId=12, id=103, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndIncrement', descriptor='(I)J', hbContractId=12, id=104, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndDecrement', descriptor='(I)J', hbContractId=12, id=105, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndAdd', descriptor='(IJ)J', hbContractId=12, id=106, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='incrementAndGet', descriptor='(I)J', hbContractId=12, id=107, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='decrementAndGet', descriptor='(I)J', hbContractId=12, id=108, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='addAndGet', descriptor='(IJ)J', hbContractId=12, id=109, type=FULL, shouldReturnTrue=false}]}
HBContract{id=13, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=13, id=110, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='set', descriptor='(ILjava/lang/Object;)V', hbContractId=13, id=111, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='getAndSet', descriptor='(ILjava/lang/Object;)Ljava/lang/Object;', hbContractId=13, id=112, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='compareAndSet', descriptor='(ILjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=13, id=113, type=FULL, shouldReturnTrue=true}]}
HBContract{id=14, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=114, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='offer', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=115, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='put', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=116, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='take', descriptor='()Ljava/lang/Object;', hbContractId=14, id=117, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='poll', descriptor='()Ljava/lang/Object;', hbContractId=14, id=118, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=15, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=119, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(ILjava/lang/Object;)V', hbContractId=15, id=120, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=121, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=122, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=123, type=RECEIVE, shouldReturnTrue=false}]}

25.04.2018 19:37:47 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor3 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor3
25.04.2018 19:37:47 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor2 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor2
25.04.2018 19:37:47 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor1 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor1
25.04.2018 19:37:48 System transformer couldn't detect if com/sun/proxy/$Proxy4 is a class loader: Cannot load class information for com.sun.proxy.$Proxy4
25.04.2018 19:37:48 System transformer couldn't detect if com/sun/proxy/$Proxy3 is a class loader: Cannot load class information for com.sun.proxy.$Proxy3
25.04.2018 19:37:48 System transformer couldn't detect if com/sun/proxy/$Proxy2 is a class loader: Cannot load class information for com.sun.proxy.$Proxy2
25.04.2018 19:37:49 System transformer couldn't detect if com/sun/proxy/$Proxy1 is a class loader: Cannot load class information for com.sun.proxy.$Proxy1
25.04.2018 19:37:52 System transformer couldn't detect if com/sun/proxy/$Proxy0 is a class loader: Cannot load class information for com.sun.proxy.$Proxy0
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample <---> Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample <---> Ljava/util/concurrent/locks/Lock;
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample <---> Ljava/lang/Runnable;
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample <---> Ljava/lang/Object;J
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample <---> Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample <---> Ljava/util/concurrent/atomic/AtomicInteger;
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample <---> Ljava/util/concurrent/atomic/AtomicLong;
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample <---> Ljava/util/concurrent/atomic/AtomicBoolean;
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample <---> Ljava/lang/Object;
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample <---> Ljava/util/concurrent/atomic/AtomicIntegerArray;I
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample <---> Ljava/util/concurrent/atomic/AtomicLongArray;I
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample <---> Ljava/util/concurrent/atomic/AtomicReferenceArray;I
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample <---> Ljava/util/concurrent/BlockingQueue;
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample <---> Ljava/util/concurrent/CopyOnWriteArrayList;
25.04.2018 19:37:53 14 composite keys generated.
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:53 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:54 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:54 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:54 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:54 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:54 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:54 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:54 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:54 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:37:54 14 samples generated
25.04.2018 19:37:54 sun.misc.Unsafe reference obtained!
25.04.2018 19:37:54 GuardedInterceptor initialized true
25.04.2018 19:37:54 1 more DRD thread : 7
25.04.2018 19:37:55 Match: sun.misc.Unsafe.getObjectVolatile <--> vertex9
25.04.2018 19:37:55 Post-retransformation done. Skipped:
drdjava.util: 69
javax.xml: 9
java.sql: 3
sun.reflect: 78
java.util: 206
sun.management: 5
sun.net: 16
java.beans: 1
javax.security: 1
sun.nio: 29
java.nio: 26
java.net: 15
com.sun: 7
sun.instrument: 4
sun.text: 5
java.math: 3
com.devexperts: 241
sun.misc: 66
java.security: 24
sun.security: 15
sun.io: 1
sun.util: 68
java.awt: 5
java.lang: 174
java.text: 24
org.objectweb: 36
java.io: 59
com.thoughtworks: 233
org.xmlpull: 3
javax.swing: 1
------------------------------------------------------
25.04.2018 19:37:55 

=====================================================
DRD 0.7-SNAPSHOT.201609291623 started it's work
Java 1.8.0_144 from D:\APP\JAVA\jre
=====================================================

25.04.2018 19:37:56 Match: java.util.concurrent.atomic.AtomicBoolean.compareAndSet <--> vertex63
25.04.2018 19:37:56 Match: sun.misc.Unsafe.compareAndSwapInt <--> vertex8
25.04.2018 19:37:56 Match: sun.misc.Unsafe.compareAndSwapObject <--> vertex6
25.04.2018 19:37:56 Match: sun.misc.Unsafe.compareAndSwapLong <--> vertex7
25.04.2018 19:37:56 Match: java.util.concurrent.Semaphore$NonfairSync.getState <--> vertex40
25.04.2018 19:37:56 Match: java.util.concurrent.Semaphore$NonfairSync.compareAndSetState <--> vertex41
25.04.2018 19:37:56 Match: java.util.concurrent.Semaphore$NonfairSync.acquireSharedInterruptibly <--> vertex36
25.04.2018 19:37:56 Match: java.util.concurrent.Semaphore$NonfairSync.releaseShared <--> vertex38
25.04.2018 19:37:56 Match: java.util.concurrent.Semaphore$NonfairSync.acquireShared <--> vertex35
25.04.2018 19:38:08 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
13 active threads.
Memory usage: init = 134217728(131072K) used = 393883112(384651K) committed = 1084751872(1059328K) max = 1881145344(1837056K).
Contract clocks: 13 ( + 15 - 2 = 13. Disposal took 17 ms).
	Hits : 70450.
	Approx total reserved size: 276; real size : 36. Dead threads clocks size: 40896.
Volatile clocks: 18 ( + 18 - 0 = 18. Disposal took 0 ms).
	Hits : 18479.
	Approx total reserved size: 360; real size : 10. Dead threads clocks size: 0.
Syn clocks: 4 ( + 4 - 0 = 4). New clock for nothing : 0.
	Hits : 17.
	Approx total reserved size : 60; real size : 10. Dead threads clocks size : 0.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 60; real size : 10. Dead threads clocks size: 0

Vector clock counters: 
	New array allocations for live clocks: 112 vs 89534 reusages.
	Dead clocks during merge: 41180 cached, 20833 same, 27633 new.
	Generations update: 31016 light, 19470 hard (6834 of them from zero).
	Vector clock merge: 8898 optimized vs 59622 full acquires; 13174 optimized vs 30024 full releases. 15919 two-way merges. 
Diff was calculated 12648 times.
	Shared reads in data clock occurred 0 times.
	VC total live resizes: 0, total dead resizes: 9015.
	Yield counter : 32633.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/0=0
sync_method_exit: 0/0=0
monitor_enter: 8/0=8
monitor_exit: 8/0=8
wait: 0/0=0
join: 0/0=0
volatile: 18485/238423=256908
contract_sync: 95832/213302=309134
field_ops: 0/143747=143747
foreign_ops: 0/376777=376777
races: 0/0=0

Field access counters
0 DETECT
143746 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
0 IGNORE_FINAL
0 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 1094 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
--------------------Total: 0------------------------



Stats gathered in 60 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:43:53 --------------------DRD settings:----------------------
logging_level = INFO
races_grouping = CALL_CLASS_AND_METHOD
report_races_on_foreign_calls = true
debugTransformMode = APPLICATION
data_clock_histogram_size = 20
internal_profiling_enabled = true
internal_metrics = FULL
-------------------------------------------------------
25.04.2018 19:43:53 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as file ...
25.04.2018 19:43:53 D:\work_study\courses\OS\DRD-0.7.1\config.xml (系统找不到指定的文件。)
25.04.2018 19:43:53 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as resource ...
25.04.2018 19:43:53 
Sync instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Race detection instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Accesses config:

Accesses of following fields wouldn't be instrumented : 
Any name if owner matches 'com/devexperts/util/.*'. 
OR
Any owner if name matches 'log|logger'. 
OR
Owner matches 'com/devexperts/app/ABC.*' and name matches 'my_field'.

Foreign calls of following methods wouldn't be instrumented : 
Any name if owner matches 'java/lang/Integer.*|java/lang/Boolean.*|com/google/common/base/Preconditions.*|java/lang/Float.*|java/util/concurrent/.*|java/io/PrintStream.*|java/lang/String.*|java/lang/Character.*|java/util/regex/Pattern.*|java/util/Properties.*|java/util/Arrays.*|com/google/common/collect/ImmutableList.*|com/thoughtworks/xstream/.*|java/lang/Thread.*|java/security/AccessController.*|java/lang/Math.*|java/util/EnumSet.*|javax/net/SocketFactory.*|org/zk.*|java/lang/Runtime.*|java/lang/Byte.*|java/lang/reflect.*|java/lang/Long.*|java/lang/Enum.*|org/apache/log4j/Logger.*|javax/swing/SwingUtilities.*|sun/misc/Unsafe.*|java/util/logging/.*|org/jdesktop.*|java/lang/Double.*|java/lang/System.*'. 
OR
Owner matches 'java/lang/Class.*' and name matches 'forName'. 
OR
Owner matches 'java/util/Calendar.*' and name matches 'getInstance'.

25.04.2018 19:43:53 
Contracts config:

Contracts matcher would try to apply following contracts sequentially. If no one matches, target method would be treated as write.
Contract{ class: java/util/Map.*, read: keySet|values|entrySet, write: null, raceDetectionMode: ALL}
Contract{ class: java/util/List.*, read: listIterator, write: null, raceDetectionMode: ALL}
Contract{ class: .*, read: get.*|toString|hashCode|equals|is.*|contains.*|iter.*|has.*|size, write: null, raceDetectionMode: ALL}

25.04.2018 19:43:53 Trace config: 
{com/devexperts/MyManagerImpl={myField= trackThreadAccess for any caller}}
*: {com/library/SomeClass= trackThreadAccess for any caller, java/util/List= printDataOperations for caller, matching pattern 'com/devexperts/jtt/tracker/gui/SystemTrayHelper.*'}

25.04.2018 19:43:53 Config initialized : true.
25.04.2018 19:43:53 Transformer and detector launched.
25.04.2018 19:43:53 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as file ...
25.04.2018 19:43:53 D:\work_study\courses\OS\DRD-0.7.1\hb-config.xml (系统找不到指定的文件。)
25.04.2018 19:43:53 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as resource ...
25.04.2018 19:43:53 
Happens-before config read successfully. Happens-before contracts are: 

HBContract{id=0, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='put', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=0, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=1, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=1, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='unlock', descriptor='()V', hbContractId=1, id=2, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='lock', descriptor='()V', hbContractId=1, id=3, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=2, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/Executor', name='execute', descriptor='(Ljava/lang/Runnable;)V', hbContractId=2, id=4, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/lang/Runnable', name='run', descriptor='()V', hbContractId=2, id=5, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=3, vertices=[HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapObject', descriptor='(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=3, id=6, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapLong', descriptor='(Ljava/lang/Object;JJJ)Z', hbContractId=3, id=7, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapInt', descriptor='(Ljava/lang/Object;JII)Z', hbContractId=3, id=8, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getObjectVolatile', descriptor='(Ljava/lang/Object;J)Ljava/lang/Object;', hbContractId=3, id=9, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putObjectVolatile', descriptor='(Ljava/lang/Object;JLjava/lang/Object;)V', hbContractId=3, id=10, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getIntVolatile', descriptor='(Ljava/lang/Object;J)I', hbContractId=3, id=11, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putIntVolatile', descriptor='(Ljava/lang/Object;JI)V', hbContractId=3, id=12, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getBooleanVolatile', descriptor='(Ljava/lang/Object;J)Z', hbContractId=3, id=13, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putBooleanVolatile', descriptor='(Ljava/lang/Object;JZ)V', hbContractId=3, id=14, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getByteVolatile', descriptor='(Ljava/lang/Object;J)B', hbContractId=3, id=15, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putByteVolatile', descriptor='(Ljava/lang/Object;JB)V', hbContractId=3, id=16, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getShortVolatile', descriptor='(Ljava/lang/Object;J)S', hbContractId=3, id=17, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putShortVolatile', descriptor='(Ljava/lang/Object;JS)V', hbContractId=3, id=18, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getCharVolatile', descriptor='(Ljava/lang/Object;J)C', hbContractId=3, id=19, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putCharVolatile', descriptor='(Ljava/lang/Object;JC)V', hbContractId=3, id=20, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getLongVolatile', descriptor='(Ljava/lang/Object;J)J', hbContractId=3, id=21, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putLongVolatile', descriptor='(Ljava/lang/Object;JJ)V', hbContractId=3, id=22, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getFloatVolatile', descriptor='(Ljava/lang/Object;J)F', hbContractId=3, id=23, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putFloatVolatile', descriptor='(Ljava/lang/Object;JF)V', hbContractId=3, id=24, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getDoubleVolatile', descriptor='(Ljava/lang/Object;J)D', hbContractId=3, id=25, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putDoubleVolatile', descriptor='(Ljava/lang/Object;JD)V', hbContractId=3, id=26, type=SEND, shouldReturnTrue=false}]}
HBContract{id=4, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquire', descriptor='(I)Z', hbContractId=4, id=27, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryRelease', descriptor='(I)Z', hbContractId=4, id=28, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireShared', descriptor='(I)Z', hbContractId=4, id=29, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryReleaseShared', descriptor='(I)Z', hbContractId=4, id=30, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquire', descriptor='(I)V', hbContractId=4, id=31, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireInterruptibly', descriptor='(I)V', hbContractId=4, id=32, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireNanos', descriptor='(IJ)Z', hbContractId=4, id=33, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='release', descriptor='(I)Z', hbContractId=4, id=34, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireShared', descriptor='(I)V', hbContractId=4, id=35, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireSharedInterruptibly', descriptor='(I)V', hbContractId=4, id=36, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireSharedNanos', descriptor='(IJ)Z', hbContractId=4, id=37, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='releaseShared', descriptor='(I)Z', hbContractId=4, id=38, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='setState', descriptor='(I)V', hbContractId=4, id=39, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='getState', descriptor='()I', hbContractId=4, id=40, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='compareAndSetState', descriptor='(II)Z', hbContractId=4, id=41, type=FULL, shouldReturnTrue=true}]}
HBContract{id=5, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='get', descriptor='()I', hbContractId=5, id=42, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='set', descriptor='(I)V', hbContractId=5, id=43, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndSet', descriptor='(I)I', hbContractId=5, id=44, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='compareAndSet', descriptor='(II)Z', hbContractId=5, id=45, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndIncrement', descriptor='()I', hbContractId=5, id=46, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndDecrement', descriptor='()I', hbContractId=5, id=47, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndAdd', descriptor='(I)I', hbContractId=5, id=48, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='incrementAndGet', descriptor='()I', hbContractId=5, id=49, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='decrementAndGet', descriptor='()I', hbContractId=5, id=50, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='addAndGet', descriptor='(I)I', hbContractId=5, id=51, type=FULL, shouldReturnTrue=false}]}
HBContract{id=6, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='get', descriptor='()J', hbContractId=6, id=52, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='set', descriptor='(J)V', hbContractId=6, id=53, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndSet', descriptor='(J)J', hbContractId=6, id=54, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='compareAndSet', descriptor='(JJ)Z', hbContractId=6, id=55, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndIncrement', descriptor='()J', hbContractId=6, id=56, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndDecrement', descriptor='()J', hbContractId=6, id=57, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndAdd', descriptor='(J)J', hbContractId=6, id=58, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='incrementAndGet', descriptor='()J', hbContractId=6, id=59, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='decrementAndGet', descriptor='()J', hbContractId=6, id=60, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='addAndGet', descriptor='(J)J', hbContractId=6, id=61, type=FULL, shouldReturnTrue=false}]}
HBContract{id=7, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='get', descriptor='()Z', hbContractId=7, id=62, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='compareAndSet', descriptor='(ZZ)Z', hbContractId=7, id=63, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='set', descriptor='(Z)V', hbContractId=7, id=64, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='getAndSet', descriptor='(Z)Z', hbContractId=7, id=65, type=FULL, shouldReturnTrue=false}]}
HBContract{id=8, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z', hbContractId=8, id=66, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='set', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)V', hbContractId=8, id=67, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=68, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=69, type=FULL, shouldReturnTrue=false}]}
HBContract{id=9, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;II)Z', hbContractId=9, id=70, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='set', descriptor='(Ljava/lang/Object;I)V', hbContractId=9, id=71, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=72, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=73, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=74, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=75, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=76, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=77, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=78, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=79, type=FULL, shouldReturnTrue=false}]}
HBContract{id=10, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;JJ)Z', hbContractId=10, id=80, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='set', descriptor='(Ljava/lang/Object;J)V', hbContractId=10, id=81, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=82, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=83, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=84, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=85, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=86, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=87, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=88, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=89, type=FULL, shouldReturnTrue=false}]}
HBContract{id=11, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='get', descriptor='(I)I', hbContractId=11, id=90, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='set', descriptor='(II)V', hbContractId=11, id=91, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndSet', descriptor='(II)I', hbContractId=11, id=92, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='compareAndSet', descriptor='(III)Z', hbContractId=11, id=93, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndIncrement', descriptor='(I)I', hbContractId=11, id=94, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndDecrement', descriptor='(I)I', hbContractId=11, id=95, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndAdd', descriptor='(II)I', hbContractId=11, id=96, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='incrementAndGet', descriptor='(I)I', hbContractId=11, id=97, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='decrementAndGet', descriptor='(I)I', hbContractId=11, id=98, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='addAndGet', descriptor='(II)I', hbContractId=11, id=99, type=FULL, shouldReturnTrue=false}]}
HBContract{id=12, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='get', descriptor='(I)J', hbContractId=12, id=100, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='set', descriptor='(IJ)V', hbContractId=12, id=101, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndSet', descriptor='(IJ)J', hbContractId=12, id=102, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='compareAndSet', descriptor='(IJJ)Z', hbContractId=12, id=103, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndIncrement', descriptor='(I)J', hbContractId=12, id=104, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndDecrement', descriptor='(I)J', hbContractId=12, id=105, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndAdd', descriptor='(IJ)J', hbContractId=12, id=106, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='incrementAndGet', descriptor='(I)J', hbContractId=12, id=107, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='decrementAndGet', descriptor='(I)J', hbContractId=12, id=108, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='addAndGet', descriptor='(IJ)J', hbContractId=12, id=109, type=FULL, shouldReturnTrue=false}]}
HBContract{id=13, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=13, id=110, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='set', descriptor='(ILjava/lang/Object;)V', hbContractId=13, id=111, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='getAndSet', descriptor='(ILjava/lang/Object;)Ljava/lang/Object;', hbContractId=13, id=112, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='compareAndSet', descriptor='(ILjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=13, id=113, type=FULL, shouldReturnTrue=true}]}
HBContract{id=14, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=114, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='offer', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=115, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='put', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=116, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='take', descriptor='()Ljava/lang/Object;', hbContractId=14, id=117, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='poll', descriptor='()Ljava/lang/Object;', hbContractId=14, id=118, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=15, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=119, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(ILjava/lang/Object;)V', hbContractId=15, id=120, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=121, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=122, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=123, type=RECEIVE, shouldReturnTrue=false}]}

25.04.2018 19:43:53 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor3 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor3
25.04.2018 19:43:53 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor2 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor2
25.04.2018 19:43:53 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor1 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor1
25.04.2018 19:43:54 System transformer couldn't detect if com/sun/proxy/$Proxy4 is a class loader: Cannot load class information for com.sun.proxy.$Proxy4
25.04.2018 19:43:54 System transformer couldn't detect if com/sun/proxy/$Proxy3 is a class loader: Cannot load class information for com.sun.proxy.$Proxy3
25.04.2018 19:43:54 System transformer couldn't detect if com/sun/proxy/$Proxy2 is a class loader: Cannot load class information for com.sun.proxy.$Proxy2
25.04.2018 19:43:55 System transformer couldn't detect if com/sun/proxy/$Proxy1 is a class loader: Cannot load class information for com.sun.proxy.$Proxy1
25.04.2018 19:43:58 System transformer couldn't detect if com/sun/proxy/$Proxy0 is a class loader: Cannot load class information for com.sun.proxy.$Proxy0
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample <---> Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample <---> Ljava/util/concurrent/locks/Lock;
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample <---> Ljava/lang/Runnable;
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample <---> Ljava/lang/Object;J
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample <---> Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample <---> Ljava/util/concurrent/atomic/AtomicInteger;
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample <---> Ljava/util/concurrent/atomic/AtomicLong;
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample <---> Ljava/util/concurrent/atomic/AtomicBoolean;
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample <---> Ljava/lang/Object;
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample <---> Ljava/util/concurrent/atomic/AtomicIntegerArray;I
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample <---> Ljava/util/concurrent/atomic/AtomicLongArray;I
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample <---> Ljava/util/concurrent/atomic/AtomicReferenceArray;I
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample <---> Ljava/util/concurrent/BlockingQueue;
25.04.2018 19:43:59 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample <---> Ljava/util/concurrent/CopyOnWriteArrayList;
25.04.2018 19:43:59 14 composite keys generated.
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:44:00 14 samples generated
25.04.2018 19:44:00 sun.misc.Unsafe reference obtained!
25.04.2018 19:44:00 GuardedInterceptor initialized true
25.04.2018 19:44:00 1 more DRD thread : 7
25.04.2018 19:44:01 Match: sun.misc.Unsafe.getObjectVolatile <--> vertex9
25.04.2018 19:44:01 Post-retransformation done. Skipped:
drdjava.util: 69
javax.xml: 9
java.sql: 3
sun.reflect: 78
java.util: 206
sun.management: 5
sun.net: 16
java.beans: 1
javax.security: 1
sun.nio: 29
java.nio: 26
java.net: 15
com.sun: 7
sun.instrument: 4
sun.text: 5
java.math: 3
com.devexperts: 241
sun.misc: 66
java.security: 24
sun.security: 15
sun.io: 1
sun.util: 68
java.awt: 5
java.lang: 174
java.text: 24
org.objectweb: 36
java.io: 59
com.thoughtworks: 233
org.xmlpull: 3
javax.swing: 1
------------------------------------------------------
25.04.2018 19:44:01 Match: sun.misc.Unsafe.compareAndSwapInt <--> vertex8
25.04.2018 19:44:01 Match: sun.misc.Unsafe.compareAndSwapObject <--> vertex6
25.04.2018 19:44:01 Match: sun.misc.Unsafe.compareAndSwapLong <--> vertex7
25.04.2018 19:44:01 

=====================================================
DRD 0.7-SNAPSHOT.201609291623 started it's work
Java 1.8.0_144 from D:\APP\JAVA\jre
=====================================================

25.04.2018 19:44:01 Match: java.util.concurrent.atomic.AtomicBoolean.compareAndSet <--> vertex63
25.04.2018 19:44:01 Match: java.util.concurrent.Semaphore$NonfairSync.getState <--> vertex40
25.04.2018 19:44:01 Match: java.util.concurrent.Semaphore$NonfairSync.compareAndSetState <--> vertex41
25.04.2018 19:44:01 Match: java.util.concurrent.Semaphore$NonfairSync.acquireSharedInterruptibly <--> vertex36
25.04.2018 19:44:01 Match: java.util.concurrent.Semaphore$NonfairSync.releaseShared <--> vertex38
25.04.2018 19:44:02 Match: java.util.concurrent.Semaphore$NonfairSync.acquireShared <--> vertex35
25.04.2018 19:44:25 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
14 active threads.
Memory usage: init = 134217728(131072K) used = 1414896352(1381734K) committed = 2084569088(2035712K) max = 2084569088(2035712K).
Contract clocks: 16 ( + 18 - 2 = 16. Disposal took 19 ms).
	Hits : 127900.
	Approx total reserved size: 340; real size : 46. Dead threads clocks size: 74228.
Volatile clocks: 23 ( + 23 - 0 = 23. Disposal took 0 ms).
	Hits : 29488.
	Approx total reserved size: 460; real size : 14. Dead threads clocks size: 0.
Syn clocks: 4 ( + 4 - 0 = 4). New clock for nothing : 0.
	Hits : 17.
	Approx total reserved size : 60; real size : 12. Dead threads clocks size : 0.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 60; real size : 12. Dead threads clocks size: 0

Vector clock counters: 
	New array allocations for live clocks: 1636 vs 157626 reusages.
	Dead clocks during merge: 75448 cached, 37843 same, 45971 new.
	Generations update: 60280 light, 35763 hard (12388 of them from zero).
	Vector clock merge: 16264 optimized vs 104024 full acquires; 23132 optimized vs 55238 full releases. 28877 two-way merges. 
Diff was calculated 23385 times.
	Shared reads in data clock occurred 43 times.
	VC total live resizes: 39, total dead resizes: 16918.
	Yield counter : 233580.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/0=0
sync_method_exit: 0/0=0
monitor_enter: 8/0=8
monitor_exit: 8/0=8
wait: 0/0=0
join: 0/0=0
volatile: 29488/426674=456162
contract_sync: 169714/386100=555814
field_ops: 218866/41809=260675
foreign_ops: 0/0=0
races: 0/0=0

Field access counters
219429 DETECT
0 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
41246 IGNORE_FINAL
0 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 1129 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
240   java/lang/management/ThreadInfo
31   ManagerSemaphore$Fan
10   java/lang/management/LockInfo
10   java/util/IdentityHashMap$IdentityHashMapIterator
6   ManagerSemaphore
4   sun/usagetracker/UsageTrackerClient
3   java/security/BasicPermissionCollection
2   java/util/IdentityHashMap$KeyIterator
1   java/util/PriorityQueue
1   sun/management/Util
0   java/lang/ProcessEnvironment$CheckedEntrySet$1
--------------------Total: 308------------------------



Stats gathered in 64 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:48:36 --------------------DRD settings:----------------------
logging_level = INFO
races_grouping = CALL_CLASS_AND_METHOD
report_races_on_foreign_calls = true
debugTransformMode = APPLICATION
data_clock_histogram_size = 20
internal_profiling_enabled = true
internal_metrics = FULL
-------------------------------------------------------
25.04.2018 19:48:36 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as file ...
25.04.2018 19:48:36 D:\work_study\courses\OS\DRD-0.7.1\config.xml (系统找不到指定的文件。)
25.04.2018 19:48:36 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as resource ...
25.04.2018 19:48:36 
Sync instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Race detection instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Accesses config:

Accesses of following fields wouldn't be instrumented : 
Any name if owner matches 'com/devexperts/util/.*'. 
OR
Any owner if name matches 'log|logger'. 
OR
Owner matches 'com/devexperts/app/ABC.*' and name matches 'my_field'.

Foreign calls of following methods wouldn't be instrumented : 
Any name if owner matches 'java/lang/Integer.*|java/lang/Boolean.*|com/google/common/base/Preconditions.*|java/lang/Float.*|java/util/concurrent/.*|java/io/PrintStream.*|java/lang/String.*|java/lang/Character.*|java/util/regex/Pattern.*|java/util/Properties.*|java/util/Arrays.*|com/google/common/collect/ImmutableList.*|com/thoughtworks/xstream/.*|java/lang/Thread.*|java/security/AccessController.*|java/lang/Math.*|java/util/EnumSet.*|javax/net/SocketFactory.*|org/zk.*|java/lang/Runtime.*|java/lang/Byte.*|java/lang/reflect.*|java/lang/Long.*|java/lang/Enum.*|org/apache/log4j/Logger.*|javax/swing/SwingUtilities.*|sun/misc/Unsafe.*|java/util/logging/.*|org/jdesktop.*|java/lang/Double.*|java/lang/System.*'. 
OR
Owner matches 'java/lang/Class.*' and name matches 'forName'. 
OR
Owner matches 'java/util/Calendar.*' and name matches 'getInstance'.

25.04.2018 19:48:36 
Contracts config:

Contracts matcher would try to apply following contracts sequentially. If no one matches, target method would be treated as write.
Contract{ class: java/util/Map.*, read: keySet|values|entrySet, write: null, raceDetectionMode: ALL}
Contract{ class: java/util/List.*, read: listIterator, write: null, raceDetectionMode: ALL}
Contract{ class: .*, read: get.*|toString|hashCode|equals|is.*|contains.*|iter.*|has.*|size, write: null, raceDetectionMode: ALL}

25.04.2018 19:48:36 Trace config: 
{com/devexperts/MyManagerImpl={myField= trackThreadAccess for any caller}}
*: {com/library/SomeClass= trackThreadAccess for any caller, java/util/List= printDataOperations for caller, matching pattern 'com/devexperts/jtt/tracker/gui/SystemTrayHelper.*'}

25.04.2018 19:48:36 Config initialized : true.
25.04.2018 19:48:36 Transformer and detector launched.
25.04.2018 19:48:36 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as file ...
25.04.2018 19:48:36 D:\work_study\courses\OS\DRD-0.7.1\hb-config.xml (系统找不到指定的文件。)
25.04.2018 19:48:36 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as resource ...
25.04.2018 19:48:36 
Happens-before config read successfully. Happens-before contracts are: 

HBContract{id=0, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='put', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=0, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=1, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=1, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='unlock', descriptor='()V', hbContractId=1, id=2, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='lock', descriptor='()V', hbContractId=1, id=3, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=2, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/Executor', name='execute', descriptor='(Ljava/lang/Runnable;)V', hbContractId=2, id=4, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/lang/Runnable', name='run', descriptor='()V', hbContractId=2, id=5, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=3, vertices=[HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapObject', descriptor='(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=3, id=6, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapLong', descriptor='(Ljava/lang/Object;JJJ)Z', hbContractId=3, id=7, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapInt', descriptor='(Ljava/lang/Object;JII)Z', hbContractId=3, id=8, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getObjectVolatile', descriptor='(Ljava/lang/Object;J)Ljava/lang/Object;', hbContractId=3, id=9, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putObjectVolatile', descriptor='(Ljava/lang/Object;JLjava/lang/Object;)V', hbContractId=3, id=10, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getIntVolatile', descriptor='(Ljava/lang/Object;J)I', hbContractId=3, id=11, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putIntVolatile', descriptor='(Ljava/lang/Object;JI)V', hbContractId=3, id=12, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getBooleanVolatile', descriptor='(Ljava/lang/Object;J)Z', hbContractId=3, id=13, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putBooleanVolatile', descriptor='(Ljava/lang/Object;JZ)V', hbContractId=3, id=14, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getByteVolatile', descriptor='(Ljava/lang/Object;J)B', hbContractId=3, id=15, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putByteVolatile', descriptor='(Ljava/lang/Object;JB)V', hbContractId=3, id=16, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getShortVolatile', descriptor='(Ljava/lang/Object;J)S', hbContractId=3, id=17, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putShortVolatile', descriptor='(Ljava/lang/Object;JS)V', hbContractId=3, id=18, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getCharVolatile', descriptor='(Ljava/lang/Object;J)C', hbContractId=3, id=19, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putCharVolatile', descriptor='(Ljava/lang/Object;JC)V', hbContractId=3, id=20, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getLongVolatile', descriptor='(Ljava/lang/Object;J)J', hbContractId=3, id=21, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putLongVolatile', descriptor='(Ljava/lang/Object;JJ)V', hbContractId=3, id=22, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getFloatVolatile', descriptor='(Ljava/lang/Object;J)F', hbContractId=3, id=23, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putFloatVolatile', descriptor='(Ljava/lang/Object;JF)V', hbContractId=3, id=24, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getDoubleVolatile', descriptor='(Ljava/lang/Object;J)D', hbContractId=3, id=25, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putDoubleVolatile', descriptor='(Ljava/lang/Object;JD)V', hbContractId=3, id=26, type=SEND, shouldReturnTrue=false}]}
HBContract{id=4, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquire', descriptor='(I)Z', hbContractId=4, id=27, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryRelease', descriptor='(I)Z', hbContractId=4, id=28, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireShared', descriptor='(I)Z', hbContractId=4, id=29, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryReleaseShared', descriptor='(I)Z', hbContractId=4, id=30, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquire', descriptor='(I)V', hbContractId=4, id=31, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireInterruptibly', descriptor='(I)V', hbContractId=4, id=32, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireNanos', descriptor='(IJ)Z', hbContractId=4, id=33, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='release', descriptor='(I)Z', hbContractId=4, id=34, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireShared', descriptor='(I)V', hbContractId=4, id=35, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireSharedInterruptibly', descriptor='(I)V', hbContractId=4, id=36, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireSharedNanos', descriptor='(IJ)Z', hbContractId=4, id=37, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='releaseShared', descriptor='(I)Z', hbContractId=4, id=38, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='setState', descriptor='(I)V', hbContractId=4, id=39, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='getState', descriptor='()I', hbContractId=4, id=40, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='compareAndSetState', descriptor='(II)Z', hbContractId=4, id=41, type=FULL, shouldReturnTrue=true}]}
HBContract{id=5, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='get', descriptor='()I', hbContractId=5, id=42, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='set', descriptor='(I)V', hbContractId=5, id=43, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndSet', descriptor='(I)I', hbContractId=5, id=44, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='compareAndSet', descriptor='(II)Z', hbContractId=5, id=45, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndIncrement', descriptor='()I', hbContractId=5, id=46, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndDecrement', descriptor='()I', hbContractId=5, id=47, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndAdd', descriptor='(I)I', hbContractId=5, id=48, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='incrementAndGet', descriptor='()I', hbContractId=5, id=49, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='decrementAndGet', descriptor='()I', hbContractId=5, id=50, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='addAndGet', descriptor='(I)I', hbContractId=5, id=51, type=FULL, shouldReturnTrue=false}]}
HBContract{id=6, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='get', descriptor='()J', hbContractId=6, id=52, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='set', descriptor='(J)V', hbContractId=6, id=53, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndSet', descriptor='(J)J', hbContractId=6, id=54, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='compareAndSet', descriptor='(JJ)Z', hbContractId=6, id=55, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndIncrement', descriptor='()J', hbContractId=6, id=56, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndDecrement', descriptor='()J', hbContractId=6, id=57, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndAdd', descriptor='(J)J', hbContractId=6, id=58, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='incrementAndGet', descriptor='()J', hbContractId=6, id=59, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='decrementAndGet', descriptor='()J', hbContractId=6, id=60, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='addAndGet', descriptor='(J)J', hbContractId=6, id=61, type=FULL, shouldReturnTrue=false}]}
HBContract{id=7, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='get', descriptor='()Z', hbContractId=7, id=62, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='compareAndSet', descriptor='(ZZ)Z', hbContractId=7, id=63, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='set', descriptor='(Z)V', hbContractId=7, id=64, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='getAndSet', descriptor='(Z)Z', hbContractId=7, id=65, type=FULL, shouldReturnTrue=false}]}
HBContract{id=8, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z', hbContractId=8, id=66, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='set', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)V', hbContractId=8, id=67, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=68, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=69, type=FULL, shouldReturnTrue=false}]}
HBContract{id=9, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;II)Z', hbContractId=9, id=70, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='set', descriptor='(Ljava/lang/Object;I)V', hbContractId=9, id=71, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=72, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=73, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=74, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=75, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=76, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=77, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=78, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=79, type=FULL, shouldReturnTrue=false}]}
HBContract{id=10, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;JJ)Z', hbContractId=10, id=80, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='set', descriptor='(Ljava/lang/Object;J)V', hbContractId=10, id=81, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=82, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=83, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=84, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=85, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=86, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=87, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=88, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=89, type=FULL, shouldReturnTrue=false}]}
HBContract{id=11, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='get', descriptor='(I)I', hbContractId=11, id=90, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='set', descriptor='(II)V', hbContractId=11, id=91, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndSet', descriptor='(II)I', hbContractId=11, id=92, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='compareAndSet', descriptor='(III)Z', hbContractId=11, id=93, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndIncrement', descriptor='(I)I', hbContractId=11, id=94, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndDecrement', descriptor='(I)I', hbContractId=11, id=95, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndAdd', descriptor='(II)I', hbContractId=11, id=96, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='incrementAndGet', descriptor='(I)I', hbContractId=11, id=97, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='decrementAndGet', descriptor='(I)I', hbContractId=11, id=98, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='addAndGet', descriptor='(II)I', hbContractId=11, id=99, type=FULL, shouldReturnTrue=false}]}
HBContract{id=12, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='get', descriptor='(I)J', hbContractId=12, id=100, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='set', descriptor='(IJ)V', hbContractId=12, id=101, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndSet', descriptor='(IJ)J', hbContractId=12, id=102, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='compareAndSet', descriptor='(IJJ)Z', hbContractId=12, id=103, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndIncrement', descriptor='(I)J', hbContractId=12, id=104, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndDecrement', descriptor='(I)J', hbContractId=12, id=105, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndAdd', descriptor='(IJ)J', hbContractId=12, id=106, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='incrementAndGet', descriptor='(I)J', hbContractId=12, id=107, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='decrementAndGet', descriptor='(I)J', hbContractId=12, id=108, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='addAndGet', descriptor='(IJ)J', hbContractId=12, id=109, type=FULL, shouldReturnTrue=false}]}
HBContract{id=13, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=13, id=110, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='set', descriptor='(ILjava/lang/Object;)V', hbContractId=13, id=111, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='getAndSet', descriptor='(ILjava/lang/Object;)Ljava/lang/Object;', hbContractId=13, id=112, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='compareAndSet', descriptor='(ILjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=13, id=113, type=FULL, shouldReturnTrue=true}]}
HBContract{id=14, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=114, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='offer', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=115, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='put', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=116, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='take', descriptor='()Ljava/lang/Object;', hbContractId=14, id=117, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='poll', descriptor='()Ljava/lang/Object;', hbContractId=14, id=118, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=15, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=119, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(ILjava/lang/Object;)V', hbContractId=15, id=120, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=121, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=122, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=123, type=RECEIVE, shouldReturnTrue=false}]}

25.04.2018 19:48:36 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor3 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor3
25.04.2018 19:48:36 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor2 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor2
25.04.2018 19:48:36 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor1 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor1
25.04.2018 19:48:37 System transformer couldn't detect if com/sun/proxy/$Proxy4 is a class loader: Cannot load class information for com.sun.proxy.$Proxy4
25.04.2018 19:48:37 System transformer couldn't detect if com/sun/proxy/$Proxy3 is a class loader: Cannot load class information for com.sun.proxy.$Proxy3
25.04.2018 19:48:37 System transformer couldn't detect if com/sun/proxy/$Proxy2 is a class loader: Cannot load class information for com.sun.proxy.$Proxy2
25.04.2018 19:48:37 System transformer couldn't detect if com/sun/proxy/$Proxy1 is a class loader: Cannot load class information for com.sun.proxy.$Proxy1
25.04.2018 19:48:41 System transformer couldn't detect if com/sun/proxy/$Proxy0 is a class loader: Cannot load class information for com.sun.proxy.$Proxy0
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample <---> Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample <---> Ljava/util/concurrent/locks/Lock;
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample <---> Ljava/lang/Runnable;
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample <---> Ljava/lang/Object;J
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample <---> Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample <---> Ljava/util/concurrent/atomic/AtomicInteger;
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample <---> Ljava/util/concurrent/atomic/AtomicLong;
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample <---> Ljava/util/concurrent/atomic/AtomicBoolean;
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample <---> Ljava/lang/Object;
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample <---> Ljava/util/concurrent/atomic/AtomicIntegerArray;I
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample <---> Ljava/util/concurrent/atomic/AtomicLongArray;I
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample <---> Ljava/util/concurrent/atomic/AtomicReferenceArray;I
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample <---> Ljava/util/concurrent/BlockingQueue;
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample <---> Ljava/util/concurrent/CopyOnWriteArrayList;
25.04.2018 19:48:42 14 composite keys generated.
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:42 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:48:43 14 samples generated
25.04.2018 19:48:43 sun.misc.Unsafe reference obtained!
25.04.2018 19:48:43 GuardedInterceptor initialized true
25.04.2018 19:48:43 1 more DRD thread : 7
25.04.2018 19:48:44 Match: sun.misc.Unsafe.getObjectVolatile <--> vertex9
25.04.2018 19:48:44 Post-retransformation done. Skipped:
drdjava.util: 69
javax.xml: 9
java.sql: 3
sun.reflect: 78
java.util: 206
sun.management: 5
sun.net: 16
java.beans: 1
javax.security: 1
sun.nio: 29
java.nio: 26
java.net: 15
com.sun: 7
sun.instrument: 4
sun.text: 5
java.math: 3
com.devexperts: 241
sun.misc: 66
java.security: 24
sun.security: 15
sun.io: 1
sun.util: 68
java.awt: 5
java.lang: 174
java.text: 24
org.objectweb: 36
java.io: 59
com.thoughtworks: 233
org.xmlpull: 3
javax.swing: 1
------------------------------------------------------
25.04.2018 19:48:44 Match: sun.misc.Unsafe.compareAndSwapInt <--> vertex8
25.04.2018 19:48:44 Match: sun.misc.Unsafe.compareAndSwapObject <--> vertex6
25.04.2018 19:48:44 Match: sun.misc.Unsafe.compareAndSwapLong <--> vertex7
25.04.2018 19:48:44 

=====================================================
DRD 0.7-SNAPSHOT.201609291623 started it's work
Java 1.8.0_144 from D:\APP\JAVA\jre
=====================================================

25.04.2018 19:48:44 Match: java.util.concurrent.atomic.AtomicBoolean.compareAndSet <--> vertex63
25.04.2018 19:48:44 Match: java.util.concurrent.Semaphore$NonfairSync.getState <--> vertex40
25.04.2018 19:48:44 Match: java.util.concurrent.Semaphore$NonfairSync.compareAndSetState <--> vertex41
25.04.2018 19:48:44 Match: java.util.concurrent.Semaphore$NonfairSync.acquireSharedInterruptibly <--> vertex36
25.04.2018 19:48:45 Match: java.util.concurrent.Semaphore$NonfairSync.releaseShared <--> vertex38
25.04.2018 19:48:45 Match: java.util.concurrent.Semaphore$NonfairSync.acquireShared <--> vertex35
25.04.2018 19:49:04 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
13 active threads.
Memory usage: init = 134217728(131072K) used = 1445009936(1411142K) committed = 1630011392(1591808K) max = 1881145344(1837056K).
Contract clocks: 16 ( + 18 - 2 = 16. Disposal took 29 ms).
	Hits : 107166.
	Approx total reserved size: 336; real size : 46. Dead threads clocks size: 62184.
Volatile clocks: 23 ( + 23 - 0 = 23. Disposal took 0 ms).
	Hits : 24658.
	Approx total reserved size: 460; real size : 14. Dead threads clocks size: 0.
Syn clocks: 4 ( + 4 - 0 = 4). New clock for nothing : 0.
	Hits : 17.
	Approx total reserved size : 60; real size : 12. Dead threads clocks size : 0.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 60; real size : 12. Dead threads clocks size: 0

Vector clock counters: 
	New array allocations for live clocks: 40 vs 132982 reusages.
	Dead clocks during merge: 63037 cached, 31537 same, 38448 new.
	Generations update: 49882 light, 29904 hard (10381 of them from zero).
	Vector clock merge: 13598 optimized vs 87147 full acquires; 19790 optimized vs 45875 full releases. 24198 two-way merges. 
Diff was calculated 19529 times.
	Shared reads in data clock occurred 43 times.
	VC total live resizes: 39, total dead resizes: 14168.
	Yield counter : 96750.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/0=0
sync_method_exit: 0/0=0
monitor_enter: 8/0=8
monitor_exit: 8/0=8
wait: 0/0=0
join: 0/0=0
volatile: 24658/359241=383899
contract_sync: 142155/323742=465897
field_ops: 183307/35048=218355
foreign_ops: 0/0=0
races: 0/0=0

Field access counters
183797 DETECT
0 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
34558 IGNORE_FINAL
0 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 1094 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
137   ManagerSemaphore$Fan
10   java/util/IdentityHashMap$IdentityHashMapIterator
6   ManagerSemaphore
4   sun/usagetracker/UsageTrackerClient
3   java/security/BasicPermissionCollection
2   java/util/IdentityHashMap$KeyIterator
1   java/util/PriorityQueue
0   java/lang/ProcessEnvironment$CheckedEntrySet$1
--------------------Total: 163------------------------



Stats gathered in 62 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:54:08 --------------------DRD settings:----------------------
logging_level = INFO
races_grouping = CALL_CLASS_AND_METHOD
report_races_on_foreign_calls = true
debugTransformMode = APPLICATION
data_clock_histogram_size = 20
internal_profiling_enabled = true
internal_metrics = FULL
-------------------------------------------------------
25.04.2018 19:54:08 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as file ...
25.04.2018 19:54:08 D:\work_study\courses\OS\DRD-0.7.1\config.xml (系统找不到指定的文件。)
25.04.2018 19:54:08 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\config.xml' as resource ...
25.04.2018 19:54:08 
Sync instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Race detection instrumentation scope config : ScopeConfig with default policy 'include all' and no special rules.

Accesses config:

Accesses of following fields wouldn't be instrumented : 
Any name if owner matches 'com/devexperts/util/.*'. 
OR
Any owner if name matches 'log|logger'. 
OR
Owner matches 'com/devexperts/app/ABC.*' and name matches 'my_field'.

Foreign calls of following methods wouldn't be instrumented : 
Any name if owner matches 'java/lang/Integer.*|java/lang/Boolean.*|com/google/common/base/Preconditions.*|java/lang/Float.*|java/util/concurrent/.*|java/io/PrintStream.*|java/lang/String.*|java/lang/Character.*|java/util/regex/Pattern.*|java/util/Properties.*|java/util/Arrays.*|com/google/common/collect/ImmutableList.*|com/thoughtworks/xstream/.*|java/lang/Thread.*|java/security/AccessController.*|java/lang/Math.*|java/util/EnumSet.*|javax/net/SocketFactory.*|org/zk.*|java/lang/Runtime.*|java/lang/Byte.*|java/lang/reflect.*|java/lang/Long.*|java/lang/Enum.*|org/apache/log4j/Logger.*|javax/swing/SwingUtilities.*|sun/misc/Unsafe.*|java/util/logging/.*|org/jdesktop.*|java/lang/Double.*|java/lang/System.*'. 
OR
Owner matches 'java/lang/Class.*' and name matches 'forName'. 
OR
Owner matches 'java/util/Calendar.*' and name matches 'getInstance'.

25.04.2018 19:54:08 
Contracts config:

Contracts matcher would try to apply following contracts sequentially. If no one matches, target method would be treated as write.
Contract{ class: java/util/Map.*, read: keySet|values|entrySet, write: null, raceDetectionMode: ALL}
Contract{ class: java/util/List.*, read: listIterator, write: null, raceDetectionMode: ALL}
Contract{ class: .*, read: get.*|toString|hashCode|equals|is.*|contains.*|iter.*|has.*|size, write: null, raceDetectionMode: ALL}

25.04.2018 19:54:08 Trace config: 
{com/devexperts/MyManagerImpl={myField= trackThreadAccess for any caller}}
*: {com/library/SomeClass= trackThreadAccess for any caller, java/util/List= printDataOperations for caller, matching pattern 'com/devexperts/jtt/tracker/gui/SystemTrayHelper.*'}

25.04.2018 19:54:08 Config initialized : true.
25.04.2018 19:54:08 Transformer and detector launched.
25.04.2018 19:54:08 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as file ...
25.04.2018 19:54:08 D:\work_study\courses\OS\DRD-0.7.1\hb-config.xml (系统找不到指定的文件。)
25.04.2018 19:54:08 Trying to find 'D:/work_study/courses/OS/DRD-0.7.1\hb-config.xml' as resource ...
25.04.2018 19:54:08 
Happens-before config read successfully. Happens-before contracts are: 

HBContract{id=0, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='put', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=0, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/ConcurrentMap', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=0, id=1, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=1, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='unlock', descriptor='()V', hbContractId=1, id=2, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/Lock', name='lock', descriptor='()V', hbContractId=1, id=3, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=2, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/Executor', name='execute', descriptor='(Ljava/lang/Runnable;)V', hbContractId=2, id=4, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/lang/Runnable', name='run', descriptor='()V', hbContractId=2, id=5, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=3, vertices=[HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapObject', descriptor='(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=3, id=6, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapLong', descriptor='(Ljava/lang/Object;JJJ)Z', hbContractId=3, id=7, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='compareAndSwapInt', descriptor='(Ljava/lang/Object;JII)Z', hbContractId=3, id=8, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getObjectVolatile', descriptor='(Ljava/lang/Object;J)Ljava/lang/Object;', hbContractId=3, id=9, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putObjectVolatile', descriptor='(Ljava/lang/Object;JLjava/lang/Object;)V', hbContractId=3, id=10, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getIntVolatile', descriptor='(Ljava/lang/Object;J)I', hbContractId=3, id=11, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putIntVolatile', descriptor='(Ljava/lang/Object;JI)V', hbContractId=3, id=12, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getBooleanVolatile', descriptor='(Ljava/lang/Object;J)Z', hbContractId=3, id=13, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putBooleanVolatile', descriptor='(Ljava/lang/Object;JZ)V', hbContractId=3, id=14, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getByteVolatile', descriptor='(Ljava/lang/Object;J)B', hbContractId=3, id=15, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putByteVolatile', descriptor='(Ljava/lang/Object;JB)V', hbContractId=3, id=16, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getShortVolatile', descriptor='(Ljava/lang/Object;J)S', hbContractId=3, id=17, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putShortVolatile', descriptor='(Ljava/lang/Object;JS)V', hbContractId=3, id=18, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getCharVolatile', descriptor='(Ljava/lang/Object;J)C', hbContractId=3, id=19, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putCharVolatile', descriptor='(Ljava/lang/Object;JC)V', hbContractId=3, id=20, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getLongVolatile', descriptor='(Ljava/lang/Object;J)J', hbContractId=3, id=21, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putLongVolatile', descriptor='(Ljava/lang/Object;JJ)V', hbContractId=3, id=22, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getFloatVolatile', descriptor='(Ljava/lang/Object;J)F', hbContractId=3, id=23, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putFloatVolatile', descriptor='(Ljava/lang/Object;JF)V', hbContractId=3, id=24, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='getDoubleVolatile', descriptor='(Ljava/lang/Object;J)D', hbContractId=3, id=25, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0, 1], owner='sun/misc/Unsafe', name='putDoubleVolatile', descriptor='(Ljava/lang/Object;JD)V', hbContractId=3, id=26, type=SEND, shouldReturnTrue=false}]}
HBContract{id=4, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquire', descriptor='(I)Z', hbContractId=4, id=27, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryRelease', descriptor='(I)Z', hbContractId=4, id=28, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireShared', descriptor='(I)Z', hbContractId=4, id=29, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryReleaseShared', descriptor='(I)Z', hbContractId=4, id=30, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquire', descriptor='(I)V', hbContractId=4, id=31, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireInterruptibly', descriptor='(I)V', hbContractId=4, id=32, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireNanos', descriptor='(IJ)Z', hbContractId=4, id=33, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='release', descriptor='(I)Z', hbContractId=4, id=34, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireShared', descriptor='(I)V', hbContractId=4, id=35, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='acquireSharedInterruptibly', descriptor='(I)V', hbContractId=4, id=36, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='tryAcquireSharedNanos', descriptor='(IJ)Z', hbContractId=4, id=37, type=RECEIVE, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='releaseShared', descriptor='(I)Z', hbContractId=4, id=38, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='setState', descriptor='(I)V', hbContractId=4, id=39, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='getState', descriptor='()I', hbContractId=4, id=40, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/locks/AbstractQueuedSynchronizer', name='compareAndSetState', descriptor='(II)Z', hbContractId=4, id=41, type=FULL, shouldReturnTrue=true}]}
HBContract{id=5, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='get', descriptor='()I', hbContractId=5, id=42, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='set', descriptor='(I)V', hbContractId=5, id=43, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndSet', descriptor='(I)I', hbContractId=5, id=44, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='compareAndSet', descriptor='(II)Z', hbContractId=5, id=45, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndIncrement', descriptor='()I', hbContractId=5, id=46, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndDecrement', descriptor='()I', hbContractId=5, id=47, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='getAndAdd', descriptor='(I)I', hbContractId=5, id=48, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='incrementAndGet', descriptor='()I', hbContractId=5, id=49, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='decrementAndGet', descriptor='()I', hbContractId=5, id=50, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicInteger', name='addAndGet', descriptor='(I)I', hbContractId=5, id=51, type=FULL, shouldReturnTrue=false}]}
HBContract{id=6, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='get', descriptor='()J', hbContractId=6, id=52, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='set', descriptor='(J)V', hbContractId=6, id=53, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndSet', descriptor='(J)J', hbContractId=6, id=54, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='compareAndSet', descriptor='(JJ)Z', hbContractId=6, id=55, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndIncrement', descriptor='()J', hbContractId=6, id=56, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndDecrement', descriptor='()J', hbContractId=6, id=57, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='getAndAdd', descriptor='(J)J', hbContractId=6, id=58, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='incrementAndGet', descriptor='()J', hbContractId=6, id=59, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='decrementAndGet', descriptor='()J', hbContractId=6, id=60, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicLong', name='addAndGet', descriptor='(J)J', hbContractId=6, id=61, type=FULL, shouldReturnTrue=false}]}
HBContract{id=7, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='get', descriptor='()Z', hbContractId=7, id=62, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='compareAndSet', descriptor='(ZZ)Z', hbContractId=7, id=63, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='set', descriptor='(Z)V', hbContractId=7, id=64, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/atomic/AtomicBoolean', name='getAndSet', descriptor='(Z)Z', hbContractId=7, id=65, type=FULL, shouldReturnTrue=false}]}
HBContract{id=8, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z', hbContractId=8, id=66, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='set', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)V', hbContractId=8, id=67, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=68, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicReferenceFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;', hbContractId=8, id=69, type=FULL, shouldReturnTrue=false}]}
HBContract{id=9, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;II)Z', hbContractId=9, id=70, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='set', descriptor='(Ljava/lang/Object;I)V', hbContractId=9, id=71, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=72, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=73, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=74, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=75, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=76, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=77, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)I', hbContractId=9, id=78, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicIntegerFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;I)I', hbContractId=9, id=79, type=FULL, shouldReturnTrue=false}]}
HBContract{id=10, vertices=[HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='compareAndSet', descriptor='(Ljava/lang/Object;JJ)Z', hbContractId=10, id=80, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='set', descriptor='(Ljava/lang/Object;J)V', hbContractId=10, id=81, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='get', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=82, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndSet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=83, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndIncrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=84, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndDecrement', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=85, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='getAndAdd', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=86, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='incrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=87, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='decrementAndGet', descriptor='(Ljava/lang/Object;)J', hbContractId=10, id=88, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[0], owner='java/util/concurrent/atomic/AtomicLongFieldUpdater', name='addAndGet', descriptor='(Ljava/lang/Object;J)J', hbContractId=10, id=89, type=FULL, shouldReturnTrue=false}]}
HBContract{id=11, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='get', descriptor='(I)I', hbContractId=11, id=90, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='set', descriptor='(II)V', hbContractId=11, id=91, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndSet', descriptor='(II)I', hbContractId=11, id=92, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='compareAndSet', descriptor='(III)Z', hbContractId=11, id=93, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndIncrement', descriptor='(I)I', hbContractId=11, id=94, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndDecrement', descriptor='(I)I', hbContractId=11, id=95, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='getAndAdd', descriptor='(II)I', hbContractId=11, id=96, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='incrementAndGet', descriptor='(I)I', hbContractId=11, id=97, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='decrementAndGet', descriptor='(I)I', hbContractId=11, id=98, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicIntegerArray', name='addAndGet', descriptor='(II)I', hbContractId=11, id=99, type=FULL, shouldReturnTrue=false}]}
HBContract{id=12, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='get', descriptor='(I)J', hbContractId=12, id=100, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='set', descriptor='(IJ)V', hbContractId=12, id=101, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndSet', descriptor='(IJ)J', hbContractId=12, id=102, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='compareAndSet', descriptor='(IJJ)Z', hbContractId=12, id=103, type=FULL, shouldReturnTrue=true}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndIncrement', descriptor='(I)J', hbContractId=12, id=104, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndDecrement', descriptor='(I)J', hbContractId=12, id=105, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='getAndAdd', descriptor='(IJ)J', hbContractId=12, id=106, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='incrementAndGet', descriptor='(I)J', hbContractId=12, id=107, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='decrementAndGet', descriptor='(I)J', hbContractId=12, id=108, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicLongArray', name='addAndGet', descriptor='(IJ)J', hbContractId=12, id=109, type=FULL, shouldReturnTrue=false}]}
HBContract{id=13, vertices=[HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=13, id=110, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='set', descriptor='(ILjava/lang/Object;)V', hbContractId=13, id=111, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='getAndSet', descriptor='(ILjava/lang/Object;)Ljava/lang/Object;', hbContractId=13, id=112, type=FULL, shouldReturnTrue=false}, HBVertex{argsIndices=[-1, 0], owner='java/util/concurrent/atomic/AtomicReferenceArray', name='compareAndSet', descriptor='(ILjava/lang/Object;Ljava/lang/Object;)Z', hbContractId=13, id=113, type=FULL, shouldReturnTrue=true}]}
HBContract{id=14, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=114, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='offer', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=115, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='put', descriptor='(Ljava/lang/Object;)Z', hbContractId=14, id=116, type=SEND, shouldReturnTrue=true}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='take', descriptor='()Ljava/lang/Object;', hbContractId=14, id=117, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/BlockingQueue', name='poll', descriptor='()Ljava/lang/Object;', hbContractId=14, id=118, type=RECEIVE, shouldReturnTrue=false}]}
HBContract{id=15, vertices=[HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=119, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='add', descriptor='(ILjava/lang/Object;)V', hbContractId=15, id=120, type=SEND, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='get', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=121, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(I)Ljava/lang/Object;', hbContractId=15, id=122, type=RECEIVE, shouldReturnTrue=false}, HBVertex{argsIndices=[-1], owner='java/util/concurrent/CopyOnWriteArrayList', name='remove', descriptor='(Ljava/lang/Object;)Z', hbContractId=15, id=123, type=RECEIVE, shouldReturnTrue=false}]}

25.04.2018 19:54:08 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor3 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor3
25.04.2018 19:54:08 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor2 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor2
25.04.2018 19:54:08 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor1 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor1
25.04.2018 19:54:09 System transformer couldn't detect if com/sun/proxy/$Proxy4 is a class loader: Cannot load class information for com.sun.proxy.$Proxy4
25.04.2018 19:54:09 System transformer couldn't detect if com/sun/proxy/$Proxy3 is a class loader: Cannot load class information for com.sun.proxy.$Proxy3
25.04.2018 19:54:09 System transformer couldn't detect if com/sun/proxy/$Proxy2 is a class loader: Cannot load class information for com.sun.proxy.$Proxy2
25.04.2018 19:54:09 System transformer couldn't detect if com/sun/proxy/$Proxy1 is a class loader: Cannot load class information for com.sun.proxy.$Proxy1
25.04.2018 19:54:13 System transformer couldn't detect if com/sun/proxy/$Proxy0 is a class loader: Cannot load class information for com.sun.proxy.$Proxy0
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample <---> Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample <---> Ljava/util/concurrent/locks/Lock;
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample <---> Ljava/lang/Runnable;
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample <---> Ljava/lang/Object;J
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample <---> Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample <---> Ljava/util/concurrent/atomic/AtomicInteger;
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample <---> Ljava/util/concurrent/atomic/AtomicLong;
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample <---> Ljava/util/concurrent/atomic/AtomicBoolean;
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample <---> Ljava/lang/Object;
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample <---> Ljava/util/concurrent/atomic/AtomicIntegerArray;I
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample <---> Ljava/util/concurrent/atomic/AtomicLongArray;I
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample <---> Ljava/util/concurrent/atomic/AtomicReferenceArray;I
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample <---> Ljava/util/concurrent/BlockingQueue;
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample <---> Ljava/util/concurrent/CopyOnWriteArrayList;
25.04.2018 19:54:14 14 composite keys generated.
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey0Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey1Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey2Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey3Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey4Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey5Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey6Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey7Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey8Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey9Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey10Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey11Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey12Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 com.devexperts.drd.bootstrap.$composite.CompositeKey13Sample loaded @ sun.misc.Launcher$AppClassLoader@18b4aac2
25.04.2018 19:54:14 14 samples generated
25.04.2018 19:54:15 sun.misc.Unsafe reference obtained!
25.04.2018 19:54:15 GuardedInterceptor initialized true
25.04.2018 19:54:15 1 more DRD thread : 7
25.04.2018 19:54:16 Match: sun.misc.Unsafe.getObjectVolatile <--> vertex9
25.04.2018 19:54:16 Post-retransformation done. Skipped:
drdjava.util: 69
javax.xml: 9
java.sql: 3
sun.reflect: 78
java.util: 206
sun.management: 5
sun.net: 16
java.beans: 1
javax.security: 1
sun.nio: 29
java.nio: 26
java.net: 15
com.sun: 7
sun.instrument: 4
sun.text: 5
java.math: 3
com.devexperts: 241
sun.misc: 66
java.security: 24
sun.security: 15
sun.io: 1
sun.util: 68
java.awt: 5
java.lang: 174
java.text: 24
org.objectweb: 36
java.io: 59
com.thoughtworks: 233
org.xmlpull: 3
javax.swing: 1
------------------------------------------------------
25.04.2018 19:54:16 Match: sun.misc.Unsafe.compareAndSwapInt <--> vertex8
25.04.2018 19:54:16 Match: sun.misc.Unsafe.compareAndSwapObject <--> vertex6
25.04.2018 19:54:16 Match: sun.misc.Unsafe.compareAndSwapLong <--> vertex7
25.04.2018 19:54:16 

=====================================================
DRD 0.7-SNAPSHOT.201609291623 started it's work
Java 1.8.0_144 from D:\APP\JAVA\jre
=====================================================

25.04.2018 19:54:16 Match: java.util.concurrent.atomic.AtomicBoolean.compareAndSet <--> vertex63
25.04.2018 19:54:16 Match: java.util.concurrent.Semaphore$NonfairSync.getState <--> vertex40
25.04.2018 19:54:17 Match: java.util.concurrent.Semaphore$NonfairSync.compareAndSetState <--> vertex41
25.04.2018 19:54:17 Match: java.util.concurrent.Semaphore$NonfairSync.acquireSharedInterruptibly <--> vertex36
25.04.2018 19:54:17 Match: java.util.concurrent.Semaphore$NonfairSync.releaseShared <--> vertex38
25.04.2018 19:54:17 Match: java.util.concurrent.Semaphore$NonfairSync.acquireShared <--> vertex35
25.04.2018 19:54:18 System transformer couldn't detect if com/sun/proxy/$Proxy5 is a class loader: Cannot load class information for com.sun.proxy.$Proxy5
25.04.2018 19:54:18 System transformer couldn't detect if com/sun/proxy/$Proxy6 is a class loader: Cannot load class information for com.sun.proxy.$Proxy6
25.04.2018 19:54:18 System transformer couldn't detect if com/sun/proxy/$Proxy7 is a class loader: Cannot load class information for com.sun.proxy.$Proxy7
25.04.2018 19:54:18 System transformer couldn't detect if com/sun/proxy/$Proxy8 is a class loader: Cannot load class information for com.sun.proxy.$Proxy8
25.04.2018 19:54:18 System transformer couldn't detect if com/sun/proxy/$Proxy9 is a class loader: Cannot load class information for com.sun.proxy.$Proxy9
25.04.2018 19:54:18 System transformer couldn't detect if com/sun/proxy/$Proxy10 is a class loader: Cannot load class information for com.sun.proxy.$Proxy10
25.04.2018 19:54:18 System transformer couldn't detect if com/sun/proxy/$Proxy11 is a class loader: Cannot load class information for com.sun.proxy.$Proxy11
25.04.2018 19:54:18 System transformer couldn't detect if com/sun/proxy/$Proxy12 is a class loader: Cannot load class information for com.sun.proxy.$Proxy12
25.04.2018 19:54:18 System transformer couldn't detect if com/sun/proxy/$Proxy13 is a class loader: Cannot load class information for com.sun.proxy.$Proxy13
25.04.2018 19:54:18 System transformer couldn't detect if com/sun/proxy/$Proxy14 is a class loader: Cannot load class information for com.sun.proxy.$Proxy14
25.04.2018 19:54:18 System transformer couldn't detect if com/sun/proxy/$Proxy15 is a class loader: Cannot load class information for com.sun.proxy.$Proxy15
25.04.2018 19:54:19 Race detected and logged to drd_races.log
25.04.2018 19:54:19 Race detected and logged to drd_races.log
25.04.2018 19:54:19 Race detected and logged to drd_races.log
25.04.2018 19:54:26 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
14 active threads.
Memory usage: init = 134217728(131072K) used = 435838760(425623K) committed = 667418624(651776K) max = 1881145344(1837056K).
Contract clocks: 16 ( + 18 - 2 = 16. Disposal took 19 ms).
	Hits : 45244.
	Approx total reserved size: 332; real size : 36. Dead threads clocks size: 25408.
Volatile clocks: 23 ( + 23 - 0 = 23. Disposal took 0 ms).
	Hits : 10082.
	Approx total reserved size: 460; real size : 14. Dead threads clocks size: 0.
Syn clocks: 5 ( + 5 - 0 = 5). New clock for nothing : 0.
	Hits : 18.
	Approx total reserved size : 80; real size : 12. Dead threads clocks size : 0.
Foreign clocks: 0 ( + 0 - 0 = 0). New clock for nothing : 0.
	Hits : 0
	Approx total reserved size: 80; real size : 12. Dead threads clocks size: 0

Vector clock counters: 
	New array allocations for live clocks: 23 vs 58369 reusages.
	Dead clocks during merge: 25387 cached, 17371 same, 15634 new.
	Generations update: 18537 light, 12286 hard (4255 of them from zero).
	Vector clock merge: 4207 optimized vs 39843 full acquires; 6887 optimized vs 18549 full releases. 9898 two-way merges. 
Diff was calculated 8041 times.
	Shared reads in data clock occurred 108 times.
	VC total live resizes: 47, total dead resizes: 5791.
	Yield counter : 9875.
================= Internal counters (processed/ignored) ===============
sync_method_enter: 0/91=91
sync_method_exit: 90/0=90
monitor_enter: 9/108=117
monitor_exit: 8/108=116
wait: 0/0=0
join: 0/0=0
volatile: 10083/142812=152895
contract_sync: 59530/126632=186162
field_ops: 182507/21730=204237
foreign_ops: 0/0=0
races: 12/7465=7477

Field access counters
182701 DETECT
0 IGNORE_SCOPE
0 IGNORE_RULE
0 IGNORE_CONSTRUCTOR
21454 IGNORE_FINAL
91 IGNORE_ERROR
Locked all time soft/hard (if available) 0/0 of total 3863 methods.

==============================================================================
-----------Top 100 accessed fields: total = writes+reads



-----------------Data clock histogram (top 20): -----------------
105   ManagerSemaphore$Fan
97   com/sun/xml/internal/bind/v2/runtime/output/NamespaceContextImpl$Element
92   com/sun/xml/internal/bind/v2/runtime/output/Encoded
82   com/sun/xml/internal/bind/v2/runtime/XMLSerializer
66   com/sun/xml/internal/bind/v2/model/impl/ElementPropertyInfoImpl
56   com/sun/xml/internal/bind/v2/model/impl/RuntimeClassInfoImpl
56   com/sun/xml/internal/bind/v2/model/impl/ClassInfoImpl
53   com/sun/xml/internal/bind/v2/runtime/output/UTF8XmlOutput
52   javax/xml/bind/helpers/AbstractMarshallerImpl
52   com/sun/xml/internal/bind/v2/runtime/JaxBeanInfo
51   com/sun/xml/internal/bind/v2/runtime/output/NamespaceContextImpl
46   com/sun/xml/internal/bind/v2/runtime/MarshallerImpl
44   com/sun/xml/internal/bind/v2/model/impl/TypeRefImpl
42   com/sun/xml/internal/bind/v2/runtime/ClassBeanInfoImpl
36   com/sun/xml/internal/bind/v2/util/CollisionCheckStack
35   java/util/logging/LogManager$LoggerWeakRef
29   com/sun/xml/internal/bind/v2/runtime/unmarshaller/StructureLoader
27   com/sun/xml/internal/bind/v2/util/QNameMap
24   com/sun/xml/internal/bind/v2/runtime/property/PropertyImpl
24   com/sun/xml/internal/bind/v2/runtime/output/XmlOutputAbstractImpl
--------------------Total: 1342------------------------



Stats gathered in 56 ms.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

25.04.2018 19:54:26 Race detected and logged to drd_races.log
25.04.2018 19:54:26 Race detected and logged to drd_races.log
25.04.2018 19:54:26 Race detected and logged to drd_races.log
25.04.2018 19:54:27 Race detected and logged to drd_races.log
25.04.2018 19:54:27 Race detected and logged to drd_races.log
25.04.2018 19:54:27 Race detected and logged to drd_races.log
25.04.2018 19:54:27 Race detected and logged to drd_races.log
25.04.2018 19:54:27 Race detected and logged to drd_races.log
25.04.2018 19:54:27 Race detected and logged to drd_races.log
25.04.2018 19:54:27 Race detected and logged to drd_races.log
25.04.2018 19:54:27 Race detected and logged to drd_races.log
25.04.2018 19:54:27 Race detected and logged to drd_races.log
25.04.2018 19:54:27 System transformer couldn't detect if sun/reflect/GeneratedConstructorAccessor5 is a class loader: Cannot load class information for sun.reflect.GeneratedConstructorAccessor5
25.04.2018 19:54:27 Race detected and logged to drd_races.log
